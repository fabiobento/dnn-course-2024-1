Quando você tem alguns exemplos positivos com o 1 de Michael e um grande número de exemplos negativos, digamos que y = 0? Quando você deve usar a detecção de anomalias e quando deve usar o aprendizado supervisionado? Na verdade, a decisão é bastante sutil em alguns aplicativos. Então, deixe-me compartilhar com vocês algumas ideias e sugestões sobre como escolher entre esses dois tipos de algoritmos. E o algoritmo de detecção de anomalias normalmente será a escolha mais apropriada quando você tem um número muito pequeno de exemplos positivos. 0 a 20 exemplos positivos não são incomuns. E um número relativamente grande de exemplos negativos com os quais tentar construir um modelo para p de x. Quando você lembra que os parâmetros para p de x são aprendidos apenas com exemplos negativos e, portanto, muito menores. Portanto, os exemplos positivos são usados apenas em seu conjunto de validação cruzada e conjunto de teste para ajuste de parâmetros e avaliação. Por outro lado, se você tiver um número maior de exemplos positivos e negativos, o aprendizado supervisionado pode ser mais aplicável. Agora, mesmo que você tenha apenas 20 exemplos positivos de treinamento, talvez seja bom aplicar um algoritmo de aprendizado supervisionado. Mas acontece que a forma como a detecção de anomalias analisa o conjunto de dados e a forma como o aprendizado supervisionado analisa o conjunto de dados são bem diferentes. Ela é a principal diferença, ou seja, se você acha que existem muitos tipos diferentes de exemplos óbvios ou muitos tipos diferentes de exemplos positivos. Então, a detecção de anomalias pode ser mais apropriada quando há muitas maneiras diferentes de o motor de uma aeronave dar errado. E se amanhã houver uma maneira totalmente nova de um motor de aeronave ter algo errado com ele. Então, seus 20 exemplos positivos podem não abranger todas as maneiras pelas quais o motor de uma aeronave pode dar errado. Isso torna difícil para qualquer algoritmo aprender com o pequeno conjunto de exemplos positivos quais são as anomalias, como são os exemplos positivos. E as anomalias futuras podem não se parecer em nada com nenhum dos exemplos anômalos que vimos até agora. Se você acredita que isso é verdade para o seu problema , eu preferiria usar um algoritmo de detecção de anomalias. Porque o que a detecção de anomalias faz é examinar os exemplos normais, ou seja, os exemplos negativos y = 0, e apenas tentar modelar sua aparência. E qualquer coisa que se desvie muito do normal é sinalizada como uma anomalia. Inclusive, se houver uma maneira totalmente nova de falhar um motor de aeronave que nunca havia sido vista antes em seu conjunto de dados. Em contraste, o aprendizado supervisionado tem uma maneira diferente de encarar o problema. Idealmente, ao aplicar o aprendizado supervisionado, você espera ter exemplos positivos suficientes para que a média tenha uma ideia de como são os exemplos positivos. E com o aprendizado supervisionado, tendemos a presumir que os exemplos positivos futuros provavelmente serão semelhantes aos do conjunto de treinamento. Então, deixe-me ilustrar isso com um exemplo, se você estiver usando um sistema para encontrar, digamos, fraudes financeiras. Infelizmente, existem muitas maneiras diferentes de algumas pessoas tentarem cometer fraudes financeiras. E, infelizmente, existem novos tipos de tentativas de fraude financeira a cada poucos meses ou a cada ano. E isso significa que, porque eles continuam surgindo completamente novos. E formas exclusivas de detecção de anomalias de fraudes financeiras costumam ser usadas apenas para procurar qualquer coisa que seja diferente, depois as transações que vimos no passado. Por outro lado, se você analisar o problema da detecção de spam por e-mail, bem, existem muitos tipos diferentes de e-mail de spam, mas mesmo ao longo de muitos anos. Os e-mails de spam continuam tentando vender coisas semelhantes ou fazer com que você acesse sites semelhantes e assim por diante. O e-mail de spam que você receberá nos próximos dias tem muito mais probabilidade de ser semelhante aos e-mails de spam que você viu no passado. É por isso que o aprendizado supervisionado funciona bem com spam, pois está tentando detectar mais tipos de e-mails de spam que você provavelmente já viu no passado em seu conjunto de treinamento. Por outro lado, se você estiver tentando detectar novos tipos de fraude que nunca foram vistos antes na seção de nomeações, talvez seja mais aplicável. Vamos ver mais alguns exemplos. Já vimos que a detecção de fraudes é um caso de uso da detecção de anomalias. Embora o aprendizado supervisionado seja usado para encontrar formas de fraude observadas anteriormente. E vimos que a classificação de spam de e-mail geralmente é endereçada por meio de aprendizado supervisionado. Você também viu o exemplo de fabricação em que talvez queira encontrar novos defeitos nunca vistos anteriormente. Por exemplo, se existirem novas maneiras de o motor de uma aeronave falhar no futuro que você ainda queira detectar. Mesmo que você não tenha nenhum exemplo positivo como esse em seu conjunto de treinamento. Acontece que o aprendizado supervisionado de fabricação também é usado para encontrar defeitos. Ainda mais para encontrar defeitos conhecidos e vistos anteriormente. Por exemplo, se você é fabricante de smartphones, está fabricando telefones celulares. E você sabe que, ocasionalmente, sua máquina para fazer a capa do smartphone estica acidentalmente a tampa. Portanto, os alongamentos são um defeito comum em smartphones e, portanto, você pode obter exemplos de treinamento suficientes de smartphones esticados que respondem ao rótulo y = 1. E apenas treine o sistema para decidir se um novo smartphone que você acabou de fabricar tem alguma extensão. E a diferença é que, se você apenas vê smartphones esticados repetidamente e quer verificar se seus telefones estão esticados , o aprendizado supervisionado funciona bem. Por outro lado, se você suspeitar que serão maneiras totalmente novas de algo dar errado no futuro, a detecção de anomalias funcionará bem. Alguns outros exemplos em que você já me ouviu falar sobre o monitoramento de máquinas no data center, especialmente se a máquina foi hackeada. Ele pode se comportar de maneira diferente de uma maneira totalmente nova, diferente de qualquer outra forma anterior em seu comportamento. Então, isso pareceria mais um aplicativo de detecção de anomalias. Na verdade, um tema é o fato de muitos aplicativos relacionados à segurança, porque os hackers geralmente estão encontrando novas maneiras de invadir sistemas. Muitos aplicativos relacionados à segurança usarão a detecção de anomalias. Ao retornar ao aprendizado supervisionado, se você quiser aprender a prever bem o clima, existem apenas alguns tipos de clima que você normalmente vê. Está ensolarado, chuvoso, vai nevar? Então, como você vê os mesmos rótulos de saída repetidamente, a previsão do tempo tende a ser uma tarefa de aprendizado supervisionado. Ou se você quiser usar os sintomas do paciente para ver se o paciente tem uma doença específica que você já viu antes. Então, isso também tenderia a ser um aplicativo de aprendizado supervisionado. Então, espero que isso lhe dê uma estrutura para decidir quando você tem um pequeno conjunto de exemplos positivos, bem como talvez um grande conjunto de exemplos negativos. Se deve usar a detecção de anomalias ou o aprendizado supervisionado. A detecção de anomalias tenta encontrar novos exemplos positivos que podem ser diferentes de tudo o que você já viu antes. Onde o aprendizado supervisionado analisa seus exemplos positivos e tenta decidir se um exemplo futuro é semelhante aos exemplos positivos que você já viu. Agora, acontece que, ao criar um algoritmo de detecção de anomalias, a escolha dos recursos é muito importante e ao construir sistemas de detecção de anomalias. Costumo passar um pouco de tempo tentando ajustar os recursos que uso no sistema no próximo vídeo. Deixe-me compartilhar algumas dicas práticas sobre como ajustar os recursos que você fornece ao algoritmo de detecção de anomalias.
