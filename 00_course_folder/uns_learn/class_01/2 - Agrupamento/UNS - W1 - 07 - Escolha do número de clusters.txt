O algoritmo k-means requer como uma de suas entradas, k, o número de clusters que você deseja encontrar, mas como você decide quantos clusters usar. Você quer dois clusters ou três clusters de cinco clusters ou 10 clusters? Vamos dar uma olhada. Para muitos problemas de agrupamento, o valor correto de K é realmente ambíguo. Se eu mostrasse a pessoas diferentes o mesmo conjunto de dados e perguntasse: quantos clusters você vê? Definitivamente, haverá pessoas que dirão que parece que existem dois grupos distintos e elas estarão certas. Também haveria outros que veriam, na verdade, quatro grupos distintos. Eles também estariam certos. Como o agrupamento é um algoritmo de aprendizado não supervisionado, você não recebe as respostas corretas na forma de rótulos específicos para tentar replicar. Existem muitos aplicativos em que os dados em si não fornecem um indicador claro de quantos clusters existem neles. Acho que é realmente ambíguo se esses dados tiverem dois ou quatro, ou talvez três clusters. Se você pegar, digamos, o vermelho aqui e os dois azuis aqui dizem. Se você examinar a literatura acadêmica sobre K-means, existem algumas técnicas para tentar escolher automaticamente o número de clusters a serem usados em uma determinada aplicação. Mencionarei brevemente um aqui ao qual você pode ver outras pessoas se referirem, embora eu deva dizer que eu pessoalmente não uso esse método. Mas uma maneira de tentar escolher o valor de K é chamada de método do cotovelo e o que isso faz é executar K-means com uma variedade de valores de K e representar graficamente a função de custo ou a função de distorção J em função do número de clusters. O que você descobre é que quando você tem muito poucos clusters, digamos um cluster, a função de distorção ou a função de custo J será alta e, à medida que você aumenta o número de clusters, ela diminui, talvez da seguinte forma. e se a curva for assim, você diz, bem, parece que a função de custo está diminuindo rapidamente até chegarmos a três clusters , mas a diminuição é mais lenta depois disso. Vamos escolher K igual a 3 e isso é chamado de cotovelo, a propósito, porque pense nisso como análogo à sua mão e esse é o seu cotovelo aqui. Traçar a função de custo em função de K pode ajudar, pode ajudá-lo a obter alguns insights.
Reproduza o vídeo começando em :2:56 e siga a transcrição2:56
Pessoalmente, quase nunca uso o método do cotovelo para escolher o número certo de clusters porque acho que, para muitas aplicações, o número certo de clusters é realmente ambíguo e você descobre que muitas funções de custo se parecem com isso, diminuindo suavemente e não têm um cotovelo claro. Gostaria que você pudesse usar para escolher o valor de K. A propósito, uma técnica que não funciona é escolher K para minimizar a função de custo J porque fazer isso faria com que você quase sempre escolhesse o maior valor possível de K porque ter mais clusters quase sempre reduzirá a função de custo J. Escolher K para minimizar a função de custo J não é uma boa técnica. Como você escolhe o valor de K e pratica? Freqüentemente, você está executando o K-means para fazer com que os clusters sejam usados para alguma finalidade posterior ou posterior. Ou seja, você vai pegar os clusters e fazer algo com esses clusters. O que eu geralmente faço e o que eu recomendo que você faça é avaliar o K-means com base em seu desempenho posterior para esse propósito posterior. Deixe-me ilustrar o exemplo do tamanho de camisetas. Uma coisa que você pode fazer é executar o K-means nesse conjunto de dados para encontrar os clusters. Nesse caso, você pode encontrar grupos como esse. Essa seria a forma como você dimensiona suas camisetas pequenas, médias e grandes, mas quantos tamanhos de camisetas deveriam existir? Bem, é ambíguo. Se você também executasse o K-means com cinco clusters, você poderia obter clusters parecidos com este. Isso permitirá que as camisetas sejam dimensionadas de acordo com o tamanho extra pequeno, pequeno, médio, grande e extra grande. Ambos são agrupamentos totalmente válidos e totalmente precisos dos dados em clusters, mas
Reproduza o vídeo começando em :5:3 e siga a transcrição5:03
agora é possível decidir se você deseja usar três clusters ou cinco clusters com base no que faz sentido para sua empresa de camisetas. Faz uma compensação entre o quão bem as camisetas vão caber, dependendo se você tem três ou cinco tamanhos, mas também haverá custos extras associados à fabricação e envio de cinco tipos de camisetas em vez de três tipos diferentes de camisetas.
Reproduza o vídeo começando em :5:27 e siga a transcrição5:27
O que eu faria nesse caso é usar K-means com K igual a 3 e K igual a 5 e, em seguida, analisar essas duas soluções para ver, com base na compensação entre ajustes de camisetas com mais tamanhos, resultados em melhor ajuste versus o custo extra de fazer mais camisetas, onde fazer menos camisetas é mais simples e mais barato, para tentar decidir o que faz sentido para o negócio de camisetas. Quando você chega ao exercício de programação, também vê uma aplicação do K-means para compressão de imagens.
Reproduza o vídeo começando em :6:4 e siga a transcrição6:04
Na verdade, esse é um dos exemplos visuais mais divertidos de K-means e aí você vê que haverá uma compensação
Reproduza o vídeo começando em :6:11 e siga a transcrição6:11
entre a qualidade da imagem compactada, ou seja, a qualidade da imagem e o quanto você pode comprimir a imagem para economizar espaço. Nesse exercício do programa, você vê que pode usar essa compensação para talvez decidir manualmente qual é o melhor valor de K com base em quão boa você deseja que a imagem pareça versus quão grande você deseja que seja o tamanho da imagem compactada. Isso é tudo para o algoritmo de agrupamento K-means. Parabéns por aprender seu primeiro algoritmo de aprendizado não supervisionado. Agora você sabe não apenas como fazer aprendizado supervisionado, mas também aprendizado não supervisionado. Espero que você também se divirta com o laboratório prático, que na verdade é um dos exercícios mais divertidos que conheço do K-means. Com isso, estamos prontos para passar para nosso segundo algoritmo de aprendizado não supervisionado, que é uma detecção não linear. Como você analisa o conjunto de dados e encontra coisas incomuns ou anômalas nele? Isso acaba sendo outra, uma das aplicações comercialmente mais importantes do aprendizado não supervisionado. Eu mesmo usei isso muitas vezes em muitos aplicativos diferentes. Vamos ao próximo vídeo para falar sobre a detecção de anomalias.
