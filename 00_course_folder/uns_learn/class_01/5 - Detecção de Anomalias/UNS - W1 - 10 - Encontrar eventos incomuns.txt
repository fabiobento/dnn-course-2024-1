Vamos dar uma olhada no nosso segundo algoritmo de aprendizado não supervisionado. Os algoritmos de detecção de anomalias examinam um conjunto de dados não rotulado de eventos normais e , assim, aprendem a detectar ou a levantar uma bandeira vermelha para saber se há um evento incomum ou anômalo. Vejamos um exemplo. Alguns dos meus amigos estavam trabalhando no uso da detecção de anomalias para detectar possíveis problemas com motores de aeronaves que estavam sendo fabricados. Quando uma empresa fabrica um motor de aeronave, você realmente quer que esse motor seja confiável e funcione bem, porque uma falha no motor de uma aeronave tem consequências muito negativas. Então, alguns dos meus amigos estavam usando a detecção de anomalias para verificar se o motor de uma aeronave depois de fabricado parecia anômalo ou se parecia haver algo errado com ele.
Reproduza o vídeo começando em ::58 e siga a transcrição0:58
Aqui está a ideia: depois que o motor de uma aeronave sai da linha de montagem, você pode calcular várias características diferentes do motor da aeronave. Então, digamos que o recurso x1 mede o calor gerado pelo motor. O recurso x2 mede a intensidade da vibração e assim por diante, também para recursos adicionais. Mas para simplificar um pouco o slide, vou usar apenas dois recursos x1 e x2 correspondentes ao calor e às vibrações do motor.
Reproduza o vídeo começando em :1:30 e siga a transcrição1:30
Agora, acontece que os fabricantes de motores de aeronaves não fabricam muitos motores ruins. Portanto, o tipo de dados mais fácil de coletar seria se você tivesse fabricado motores de aeronaves m para coletar as características x1 e x2 sobre como esses motores m se comportam e, provavelmente, a maioria deles está bem do que os motores normais, em vez de aqueles com defeito ou fluxo.
Reproduza o vídeo começando em :2: e siga a transcrição2:00
E o problema de detecção de anomalias é que, após o algoritmo de aprendizado ter visto esses m exemplos de como os motores de aeronaves normalmente se comportam em termos de quanto calor é gerado e quanto eles vibram. Se um novo motor de aeronave saísse da linha de montagem e tivesse um novo vetor de características fornecido pelo Xtest, gostaríamos de saber se esse motor é semelhante aos que foram fabricados antes? Então, isso provavelmente está bem? Ou há algo realmente estranho nesse motor que pode fazer com que esse desempenho seja suspeito, o que significa que talvez devêssemos inspecioná-lo com ainda mais cuidado antes de deixá-lo ser enviado e instalado em um avião e, em seguida, espero que nada dê errado com ele. Veja como funciona um algoritmo de detecção de anomalias. Deixe-me traçar os exemplos de x1 a xm aqui por meio desses cruzamentos, onde cada ponto de dados cruzado neste gráfico corresponde a um motor específico com uma quantidade específica de calor e uma quantidade específica de vibrações. Se esse novo motor de aeronave Xtest sair da linha de montagem, e se você traçar esses valores de x1 e x2 e se estivesse aqui, você diz, ok, provavelmente parece bom. Parece muito semelhante a outros motores de aeronaves. Talvez eu não precise me preocupar com isso.
Reproduza o vídeo começando em :3:33 e siga a transcrição3:33
Mas se esse novo motor de aeronave tem uma assinatura de calor e vibração, digamos, até aqui embaixo, então esse ponto de dados aqui embaixo parece muito diferente do que vimos no topo. E então provavelmente diremos, garoto, isso parece uma anomalia. Isso não se parece com os exemplos que eu vi antes, é melhor inspecionar isso com mais cuidado antes de deixarmos esse motor ser instalado em um avião. Como você pode fazer com que um algoritmo resolva esse problema? A forma mais comum de realizar a detecção de anomalias é por meio de uma técnica chamada estimativa de densidade. E isso significa que, quando você recebe seus conjuntos de treinamento desses exemplos m, a primeira coisa a fazer é criar um modelo para a probabilidade de x. Em outras palavras, o algoritmo de aprendizado tentará descobrir quais são os valores das características x1 e x2 que têm alta probabilidade e quais são os valores menos prováveis ou têm menor chance ou menor probabilidade de serem vistos no conjunto de dados. Neste exemplo que temos aqui, acho que é bem provável que vejamos exemplos naquela pequena elipse no meio, então aquela região no meio teria alta probabilidade, talvez as coisas nessa elipse tenham uma probabilidade um pouco menor. Coisas nesta elipse desse oval têm probabilidade ainda menor e coisas externas têm probabilidade ainda menor. Os detalhes de como você decide, a partir do conjunto de treinamento, quais regiões têm maior probabilidade versus menor probabilidade são algo que veremos nos próximos vídeos. E ter modelado ou aprendido a modelar para p de x Quando você recebe o novo exemplo de teste Xtest. O que você fará é então calcular a probabilidade do Xtest. E se for pequeno ou, mais precisamente, se for menor do que um pequeno número que vou chamar de épsilon, esse é um alfabeto grego épsilon. Então, o que você deve considerar como um número pequeno, o que significa que p de x é muito pequeno ou, em outras palavras, o valor específico de x que você viu para um determinado usuário era muito improvável, em relação a outros usuários que você já viu. Mas o p do Xtest é menor do que um pequeno limite ou um pequeno número épsilon, levantaremos uma bandeira para dizer que isso pode ser uma anomalia. Então, por exemplo, se o Xtest estava até aqui, a probabilidade de um exemplo chegar até aqui é, na verdade, muito baixa. Então, espero que p de Xtest para esse valor de Xtest seja menor que épsilon e, portanto, sinalizemos isso como uma anomalia. Por outro lado, se p de Xtest não for menor que épsilon, se p de Xtest for maior que igual a épsilon, então diremos que parece bom, isso não parece uma anomalia. E essa resposta para se você tivesse um exemplo aqui, diria que nosso modelo p de x diria que exemplos próximos ao meio aqui, eles são, na verdade, de alta probabilidade. Há uma chance muito grande de que o novo motor do avião tenha características próximas a essas elipses internas. Portanto, p do Xtest será grande para esses exemplos e diremos que está tudo bem e não é uma anomalia. A detecção de anomalias é usada hoje em muitas aplicações. É frequentemente usado na detecção de fraudes, por exemplo, se você estiver administrando um site com muitos recursos diferentes. Se você computar xi como os recursos das atividades do usuário i. E exemplos de recursos podem incluir: com que frequência esse usuário faz login e quantas páginas da web ele visita? Quantas transações eles estão fazendo ou quantas postagens no fórum de discussão estão fazendo e qual é a velocidade de digitação? Quantos caracteres por segundo eles parecem capazes de digitar. Com dados como esses, você pode modelar p de x a partir de dados para modelar qual é o comportamento típico de um determinado usuário. No fluxo de trabalho comum de detecção de fraudes, você não desativaria automaticamente uma conta só porque ela parecia anômala. Mas, em vez disso, você pode pedir à equipe de segurança que examine mais de perto ou faça algumas verificações de segurança adicionais, como pedir que o usuário verifique sua identidade com um número de telefone celular ou peça que ele faça uma captura para provar que é humano e assim por diante. Mas algoritmos como esse são usados rotineiramente hoje em dia para tentar encontrar atividades incomuns ou talvez um pouco suspeitas. Assim, você pode examinar essas contas com mais cuidado para garantir que não haja algo fraudulento. E esse tipo de detecção de fraude é usado tanto para encontrar contas falsas quanto esse tipo de algoritmo também é usado com frequência para tentar identificar fraudes financeiras, como se houvesse um padrão muito incomum de compras. Então, isso pode ser algo que valha a pena examinar com mais cuidado uma equipe de segurança. A detecção de anomalias também é frequentemente usada na fabricação. Você viu um exemplo no slide anterior com a fabricação de motores de aeronaves. Mas muitos fabricantes em vários continentes, em muitas fábricas, usavam rotineiramente a detecção de anomalias para ver se o que acabavam de fabricar. Qualquer coisa, desde um motor de avião até uma placa de circuito impresso, de um smartphone a um motor, até muitas coisas para ver se você acabou de fabricar a unidade que de alguma forma se comporta de forma estranha. Porque isso pode indicar que há algo errado com o motor do avião ou com as placas de circuito impresso, ou o que você tem, que pode fazer com que você queira dar uma olhada mais cuidadosa antes de enviar o objeto ao cliente. Também é usado para monitorar computadores em clusters e em data centers onde, se X I são os recursos de uma determinada máquina I, como se os recursos capturassem a memória dos usuários, o número de acessos ao disco por segundo. Os recursos de carga da CPU também podem ser raciais, como a proporção entre a carga da CPU e o tráfego da rede. Então, se algum computador específico se comportar de maneira muito diferente de outros computadores, talvez valha a pena dar uma olhada nesse computador para ver se algo está errado com ele. Por exemplo, se ele teve uma falha no teste ou falha de hackeamento da rede ou se algo está errado com ele ou se talvez ele tenha sido invadido. A detecção de anomalias é um desses algoritmos amplamente usados, embora você não pareça ouvir as pessoas falarem muito sobre isso. Lembro-me de que a primeira vez que trabalhei na aplicação comercial de detecção de anomalias foi quando estava ajudando uma empresa de telecomunicações a implementar a detecção de anomalias para ver quando qualquer uma das torres de celular estava se comportando de maneira incomum. Porque isso provavelmente significava que havia algo errado com a torre de celular, então eles querem contratar um técnico, então espero que mais pessoas tenham uma boa cobertura de celular. E também usei a detecção de anomalias para encontrar transações financeiras fraudulentas. Atualmente, costumo usá-la para ajudar empresas de manufatura a encontrar peças anômalas que possam ter fabricado, mas que deveriam inspecionar com mais frequência. Portanto, é uma ferramenta muito útil para ter em seu baú de ferramentas. E nos próximos vídeos, falaremos sobre como você pode criar e fazer com que esses algoritmos funcionem por si mesmo. Para que os álbuns de detecção anônima funcionem, precisaremos usar uma distribuição gaussiana para modelar os dados p de x. Então, vamos ao próximo vídeo para falar sobre distribuições gaussianas.
