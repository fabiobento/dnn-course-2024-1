No primeiro curso, você viu como, para a regressão linear, a normalização futura pode ajudar o algoritmo a funcionar mais rápido. No caso de criar um sistema recomendado com números amplos, como classificações de filmes de uma a cinco ou zero a cinco estrelas, acontece que seu algoritmo funcionará com mais eficiência. E também terá um desempenho um pouco melhor se você primeiro realizar a normalização média. Ou seja, se você normalizar a audiência do filme para ter um valor médio consistente, vamos dar uma olhada no que isso significa. Então, aqui está o conjunto de dados que estamos usando. E abaixo está a função de custo que você usou para aprender os parâmetros do modelo. Para explicar a normalização média, na verdade vou adicionar a quinta usuária Eve, que ainda não avaliou nenhum filme. E você verá daqui a pouco que adicionar a normalização média ajudará o algoritmo a fazer melhores previsões sobre a usuária Eve. Na verdade, se você treinasse um algoritmo de filtragem colaborativa nesses dados, então porque estamos tentando reduzir os parâmetros por causa desse termo de regularização. Se você executasse o algoritmo nesse conjunto de dados, na verdade acabaria com os parâmetros w para o quinto usuário, para que o usuário Eve seja igual a [0 0] e muito provavelmente b (5) = 0. Como Eve ainda não classificou nenhum filme, os parâmetros w e b não afetam esse primeiro termo na função de custo porque nenhuma das classificações do filme de Eve desempenha um papel nessa função de custo de erro quadrado. Portanto, minimizar isso significa tornar os parâmetros w tão pequenos quanto possível. Nós realmente não regularizamos b. Mas se você inicializar b com 0 como padrão, você também acabará com b (%) = 0. Mas se esses são os parâmetros para o usuário 5 que são para Eve, então o que a média acabará fazendo é prever que todas as classificações de filmes de Eve sejam w (%) .x para o filme i + b (5). E isso é igual a 0 se w e b acima forem iguais a 0. Portanto, esse algoritmo prediz que, se você tiver um novo usuário que ainda não avaliou nada, achamos que ele avaliará todos os filmes com zero estrelas, o que não é particularmente promissor. Portanto, neste vídeo, veremos que a normalização média ajudará esse algoritmo a fazer melhores previsões das classificações de filmes para um novo usuário que ainda não avaliou nenhum filme. Para descrever a normalização média, deixe-me pegar todos os valores aqui, incluindo todos os pontos de interrogação de Eva, e colocá-los em uma matriz bidimensional como esta. Apenas para escrever todas as avaliações, incluindo os pontos de interrogação, de uma forma mais sustentada e compacta. Para realizar a normalização média, o que vamos fazer é pegar todas essas classificações e, para cada filme, calcular a classificação média dada. Então, o primeiro filme teve dois 5s e dois 0s e, portanto, a avaliação média é 2,5. O segundo filme teve um 5 e um 0, então a média é de 2,5. O filme três tem uma média de 4 e 0 para 2. O filme quatro tem uma média de 2,25 de avaliação. E o quinto filme, que não é tão popular, tem uma classificação média de 1,25. Então, vou pegar todos esses cinco números e reuni-los em um vetor que vou chamar de μ porque esse é o vetor da audiência média que cada um dos filmes teve. Calculando a média apenas dos usuários que leram aquele filme em particular. Em vez de usar essas classificações originais de 0 a 5 estrelas aqui, vou pegar isso e subtrair de cada avaliação a classificação média que ela recebeu. Então, por exemplo, a classificação desse filme foi 5. Vou subtrair 2,5 me dando 2,5 por aqui. Este filme teve uma classificação de 0 estrelas. Vou subtrair 2,25, dando-me uma classificação de -2,25 e assim por diante para todos os cinco usuários atuais, incluindo a nova usuária Eve, bem como para todos os cinco filmes. Então, esses novos valores à direita se tornam seus novos valores de Y (i, j). Vamos fingir que o usuário 1 deu uma classificação de 2,5 ao filme um e a classificação de -2,25 ao filme quatro. E usando isso, você pode aprender w (j), b (j) e x (i) da mesma forma que antes para o usuário j no filme i, você prediria w (j) .x (i) + b (j). Mas porque subtraímos µi para o filme i durante essa etapa de normalização média, a fim de prever uma classificação não negativa por estrelas, o que é impossível para avaliações de usuários de 0 a 5 estrelas. Temos que adicionar novamente esse µi, que é apenas o valor que subtraímos. Então, como um exemplo concreto, se observarmos o que acontece com o usuário 5 com a nova usuária Eve porque ela ainda não avaliou nenhum filme, a média pode aprender os parâmetros w (5) = [0 0] e, digamos, b (5) = 0. Então, se olharmos para a classificação prevista para o primeiro filme, vamos prever que Eve a classificará com w (5) .x1 + b (5), mas isso é 0 e depois + µ1, o que é igual a 2,5. Portanto, parece mais razoável pensar que Eve provavelmente avaliará este filme 2,5 do que pensar que Eve classificará todos os filmes com zero estrelas só porque ela ainda não avaliou nenhum filme. E, de fato, o efeito desse algoritmo é que ele fará com que as suposições iniciais da nova usuária Eve sejam exatamente iguais à média de qualquer outro usuário que tenha avaliado esses cinco filmes. E parece mais razoável considerar a avaliação média dos filmes do que adivinhar que todas as avaliações de Eve serão zero. Acontece que, ao normalizar a média das diferentes classificações de filmes para zero, o algoritmo de otimização do sistema recomendado também funcionará um pouco mais rápido. Mas isso faz com que o algoritmo se comporte muito melhor para usuários que não avaliaram nenhum filme ou um número muito pequeno de filmes. E as previsões se tornarão mais razoáveis. Neste exemplo, o que fizemos foi normalizar cada uma das linhas dessa matriz para ter média zero e vimos que isso ajuda quando há um novo usuário que ainda não avaliou muitos filmes. Há uma outra alternativa que você pode usar que é, em vez disso, normalizar as colunas dessa matriz para ter uma média zero. E isso também seria uma coisa razoável a se fazer. Mas acho que neste aplicativo, normalizar as linhas para que você possa dar classificações razoáveis para um novo usuário parece mais importante do que normalizar as colunas. A normalização das colunas seria uma esperança se houvesse um filme totalmente novo que ninguém tenha avaliado ainda. Mas se há um filme totalmente novo que ninguém avaliou ainda, você provavelmente não deveria mostrá-lo para muitos usuários inicialmente, porque você não sabe muito sobre esse filme. Portanto, normalizar as colunas, a esperança no caso de um filme sem audiência, parece menos importante para mim do que normalizar as regras da esperança no caso de um novo usuário que ainda não avaliou nenhum filme. E quando você estiver criando seu próprio sistema recomendado no laboratório prático desta semana, normalizar apenas as funções deve funcionar bem. Então, isso significa normalização. Isso faz com que o algoritmo seja executado um pouco mais rápido. Mas, ainda mais importante, faz com que o algoritmo forneça previsões muito melhores e mais razoáveis quando há usuários que avaliaram pouquíssimos filmes ou até mesmo nenhum filme. Esse detalhe de implementação da normalização média fará com que seu sistema recomendado funcione muito melhor. Em seguida, vamos ao próximo vídeo para falar sobre como você pode implementar esse fluxo intensivo para si mesmo.
Obrigatória
pt-BR
​


