Se você acessar um site de compras on-line e estiver vendo um item específico, digamos, talvez um livro específico, o site pode mostrar coisas como : “Aqui estão alguns outros livros semelhantes a este ” ou, se você estiver vendo um filme específico, poderá dizer: “Aqui estão alguns outros filmes semelhantes a este”. Como os sites fazem isso? , para que, quando você estiver examinando um item, ele forneça outros itens semelhantes ou relacionados a serem considerados. Acontece que o algoritmo de filtragem colaborativa sobre o qual falamos oferece uma ótima maneira de encontrar itens relacionados. Vamos dar uma olhada. Como parte da filtragem colaborativa que discutimos, você aprendeu os recursos x^ (i) para cada item i, para cada filme i ou outro tipo de item que eles estão recomendando aos usuários. No início desta semana, usei um exemplo hipotético dos filmes que representam o quanto um filme é um filme de romance versus um filme de ação. Na prática, quando você usa esse algoritmo para aprender os recursos x^ (i) automaticamente, observando os recursos individuais x_1, x_2, x_3, você acha que eles são muito difíceis de interpretar. É muito difícil aprender características e dizer que x_1 é um filme de ação e x_2 é um filme estrangeiro e assim por diante.
Reproduza o vídeo começando em :1:22 e siga a transcrição1:22
Mesmo assim, esses recursos aprendidos, coletivamente x_1, x_2, x_3, outros muitos recursos, e você os tem coletivamente, transmitem algo sobre como é esse filme. Acontece que, dadas as características x^ (i) do item i, se você quiser encontrar outros itens, digamos, outros filmes relacionados ao filme i , o que você pode fazer é tentar encontrar o item k com características x^ (k) que seja semelhante a x^ (i). Em particular, dado um vetor de características x^ (k), a maneira como determinamos o que é conhecido como semelhante ao recurso x^ (i) é a seguinte: a soma de l é igual a 1 a n com n características de x^ (k) _l menos x^ (i) _l quadrado. Isso acaba sendo a distância quadrada entre x^ (k) e x^ (i) e, em matemática, essa distância quadrada entre esses dois vetores, x^ (k) e x^ (i), às vezes também é escrita da seguinte forma. Se você encontrar não apenas o filme com a menor distância entre x^ (k) e x^ (i), mas encontrar, digamos, os cinco ou 10 itens com os vetores de características mais semelhantes, acabará encontrando cinco ou 10 itens relacionados ao item x^ (i). Se você estiver criando um site e quiser ajudar os usuários a encontrar produtos relacionados a um produto específico que estão procurando, essa seria uma boa maneira de fazer isso, porque os recursos x^ (i) dão uma ideia do que se trata o item i, outros itens x^ (k) com características semelhantes se tornarão semelhantes ao item i. Acontece que, no final desta semana, essa ideia de encontrar itens relacionados será um pequeno alicerce que usaremos para usar também para um sistema recomendado ainda mais poderoso. Antes de encerrar esta seção, quero mencionar algumas limitações da filtragem colaborativa. Na filtragem colaborativa, você tem um conjunto de itens e, portanto, os usuários e os usuários avaliaram algum subconjunto de itens. Uma dessas fraquezas é que não é muito bom no problema de partida a frio. Por exemplo, se houver um novo item em seu catálogo, digamos que alguém acabou de publicar um novo filme e quase ninguém já avaliou esse filme, como você classifica o novo item se poucos usuários o avaliaram antes? Da mesma forma, para novos usuários que avaliaram apenas alguns itens, como podemos garantir que mostremos a eles algo razoável? Pudemos ver em um vídeo anterior como a normalização média pode ajudar com isso e ajuda muito. Mas talvez formas ainda melhores de mostrar aos usuários que avaliaram pouquíssimos itens, coisas que provavelmente lhes interessarão. Isso é chamado de problema de inicialização a frio, porque quando você tem um novo item, poucos usuários avaliaram, ou temos um novo usuário que classificou pouquíssimos itens, os resultados da filtragem colaborativa para esse item ou para aquele usuário podem não ser muito precisos. A segunda limitação da filtragem colaborativa é que ela não oferece uma maneira natural de usar informações secundárias ou informações adicionais sobre itens ou usuários. Por exemplo, para um determinado filme em seu catálogo, você pode saber qual é o gênero do filme, quem teve uma estrela de cinema, se é um estúdio, qual é o orçamento e assim por diante. Você pode ter muitos recursos sobre um determinado filme. Para um único usuário, você pode saber algo sobre seus dados demográficos, como idade, sexo e localização. Eles expressam preferências, como se dissessem que gostam de certos gêneros de filmes, mas não de outros gêneros de filmes, ou se você souber o endereço IP do usuário, isso pode dizer muito sobre a localização do usuário, e saber a localização do usuário também pode ajudá-lo a adivinhar em que o usuário pode estar interessado, ou se você sabe se o usuário está acessando seu site em um celular ou desktop, ou se você sabe em que navegador ele está acessando seu site usando. Acontece que todas essas são pequenas dicas que você pode obter. Eles podem ser surpreendentemente correlacionados com as preferências de um usuário. A propósito, sabe-se que os usuários que usam o navegador Chrome versus Firefox versus Safari versus Microsoft Edge, na verdade se comportam de maneiras muito diferentes. Até mesmo conhecer o navegador do usuário pode dar uma dica de quando você coletou dados suficientes sobre o que esse usuário em particular pode gostar. Embora a filtragem colaborativa, que temos vários usuários, classifique vários itens, seja um conjunto muito poderoso de algoritmos e também tenha algumas limitações. No próximo vídeo, vamos desenvolver algoritmos de filtragem baseados em conteúdo, que podem resolver muitas dessas limitações. Os algoritmos de filtragem baseados em conteúdo são uma técnica de arte estável usada em muitas aplicações comerciais atualmente. Vamos dar uma olhada em como eles funcionam.
