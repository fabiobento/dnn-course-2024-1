Até agora, acabamos de ajustar linhas retas aos nossos dados. Vamos usar as ideias de regressão linear múltipla e engenharia de recursos para criar um novo algoritmo chamado regressão polinomial, que permitirá ajustar curvas, funções não lineares, aos seus dados. Digamos que você tenha um conjunto de dados de habitação parecido com este, em que o recurso x é o tamanho em pés quadrados. Parece que uma linha reta não se encaixa muito bem nesse conjunto de dados. Talvez você queira ajustar uma curva, talvez uma função quadrática aos dados como esse, que inclui um tamanho x e também x ao quadrado, que é o tamanho elevado à potência de dois. Talvez isso lhe dê um melhor ajuste aos dados. Mas então você pode decidir que seu modelo quadrático realmente não faz sentido porque uma função quadrática eventualmente volta para baixo. Bem, nós realmente não esperaríamos que os preços da habitação caíssem quando o tamanho aumentasse. Casas grandes parecem que geralmente deveriam custar mais. Em seguida, você pode escolher uma função cúbica em que agora temos não apenas x ao quadrado, mas x ao cubo. Talvez esse modelo produza essa curva aqui, que se ajusta um pouco melhor aos dados porque o tamanho eventualmente volta a aumentar à medida que o tamanho aumenta. Ambos são exemplos de regressão polinomial, porque você pegou sua característica opcional x e a elevou à potência de duas ou três ou qualquer outra potência. No caso da função cúbica, a primeira característica é o tamanho, a segunda característica é o tamanho ao quadrado e a terceira característica é o tamanho ao cubo. Eu só quero salientar mais uma coisa: se você criar recursos que são esses poderes, como o quadrado dos recursos originais, assim, o dimensionamento de recursos se torna cada vez mais importante. Se o tamanho da casa variar de, digamos, 1-1.000 pés quadrados , a segunda característica, que é um tamanho quadrado, variará de um a um milhão, e a terceira característica, que tem o tamanho cúbico, varia de um a um bilhão. Essas duas feições, x ao quadrado e x ao cubo, assumem faixas de valores muito diferentes em comparação com a característica original x. Se você estiver usando gradiente descendente, é importante aplicar a escala da feição para colocar suas feições em faixas de valores comparáveis. Finalmente, apenas um último exemplo de como você realmente tem uma grande variedade de opções de recursos para usar. Outra alternativa razoável para calcular o tamanho quadrado e o tamanho cúbico é usar a raiz quadrada de x. Seu modelo pode parecer w_1 vezes x mais w_2 vezes a raiz quadrada de x mais b. A função raiz quadrada de x mais b. A função raiz quadrada
Reproduza o vídeo começando em :3:1 e siga a transcrição3:01
tem essa aparência e se torna um pouco menos íngreme à medida que x aumenta, mas nunca se achata completamente e certamente nunca volta para baixo. Essa seria outra opção de recursos que também poderiam funcionar bem para esse conjunto de dados. Você pode se perguntar: como decido quais recursos usar? Posteriormente, no segundo curso desta especialização, você verá como escolher diferentes recursos e modelos diferentes que incluem ou não esses recursos, e você tem um processo para medir o desempenho desses diferentes modelos para ajudá-lo a decidir quais recursos incluir ou não. Por enquanto, eu só quero que você saiba que você tem uma escolha sobre quais recursos usar. Ao usar engenharia de recursos e funções polinomiais, você pode potencialmente obter um modelo muito melhor para seus dados. No laboratório opcional que segue este vídeo, você verá alguns códigos que implementam a regressão polinomial usando recursos como x, x ao quadrado e x ao cubo. Por favor, dê uma olhada e execute o código e veja como ele funciona.
Reproduza o vídeo começando em :4:5 e siga a transcrição4:05
Depois desse, há também outro laboratório opcional que mostra como usar um popular kit de ferramentas de código aberto que implementa regressão linear. O Scikit-learn é uma biblioteca de aprendizado de máquina de código aberto amplamente usada por muitos profissionais em muitas das principais empresas de IA, Internet e aprendizado de máquina do mundo.
Reproduza o vídeo começando em :4:26 e siga a transcrição4:26
Se, agora ou no futuro, você estiver usando o aprendizado de máquina em seu trabalho, há uma boa chance de usar ferramentas como o Scikit-learn para treinar seus modelos. Trabalhar nesse laboratório opcional lhe dará a chance não apenas de entender melhor a regressão linear, mas também de ver como isso pode ser feito em apenas algumas linhas de código usando uma biblioteca como o Scikit-learn. Para que você tenha uma sólida compreensão desses algoritmos e seja capaz de aplicá-los, acho importante que você saiba como implementar a regressão linear sozinho e não apenas chamar alguma função scikit-learn que é uma caixa preta. Mas o scikit-learn também tem um papel importante na forma como o aprendizado de máquina é feito na prática hoje. Estamos quase no final desta semana. Parabéns por terminar todos os vídeos desta semana. Por favor, dê uma olhada nos questionários práticos e também no laboratório prático, que espero que permita que você experimente e pratique as ideias que discutimos. No laboratório prático desta semana, você implementa a regressão linear. Espero que você se divirta muito fazendo com que esse algoritmo de aprendizado funcione por si mesmo. Boa sorte com isso. Também espero ver você nos vídeos da próxima semana, onde iremos além da regressão, ou seja, a previsão de números, para falar sobre nosso primeiro algoritmo de classificação, que pode prever categorias. Te vejo na próxima semana.
