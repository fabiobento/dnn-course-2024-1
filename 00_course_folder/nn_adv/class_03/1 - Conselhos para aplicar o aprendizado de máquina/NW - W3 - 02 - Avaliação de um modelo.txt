Vamos ver, você treinou um modelo de aprendizado de máquina. Como você avalia o desempenho desse modelo? Você descobre que ter uma forma sistemática de avaliar o desempenho também pode traçar um caminho mais claro para melhorar seu desempenho. Então, vamos dar uma olhada em como avaliar o modelo. Vamos dar o exemplo de aprender a prever os preços da habitação em função do tamanho. Digamos que você tenha treinado o modelo para prever os preços da habitação em função do tamanho x. E para o modelo esse é um polinômio de quarta ordem. Então, apresenta x, x ao quadrado, execute e x elevado a 4. Como ajustamos um polinômio de ordem 1/4 a um conjunto de treinamento com cinco pontos de dados, isso se ajusta muito bem aos dados de treinamento. Mas não gostamos muito desse modelo porque, embora ele se ajuste bem aos dados de treinamento, achamos que ele falhará em generalizar para novos exemplos que não estão no conjunto de treinamento.
Reproduza o vídeo começando em :1:3 e siga a transcrição1:03
Então, quando você está prevendo preços, apenas uma única característica do tamanho da casa, você pode traçar o modelo assim e podemos ver que a curva é muito fraca, então sabemos que essa paródia não é um bom modelo. Mas se você estivesse ajustando esse modelo com ainda mais características, digamos que tivéssemos x1 o tamanho da casa, o número de quartos, o número de andares da casa e também a idade da casa em anos, então se tornaria muito mais difícil traçar f porque f agora é uma função de x1 a x4. E como você traça uma função quadridimensional?
Reproduza o vídeo começando em :1:42 e siga a transcrição1:42
Então, para saber se seu modelo está indo bem, especialmente para aplicativos em que você tem mais de um ou dois recursos, o que torna difícil traçar f de x. Precisamos de uma forma mais sistemática de avaliar o desempenho do seu modelo. Aqui está uma técnica que você pode usar. Se você tem um conjunto de treinamento e este é um pequeno conjunto de treinamento com apenas 10 exemplos listados aqui, em vez de usar todos os seus dados para treinar os parâmetros w e p do modelo, você pode dividir o conjunto de treinamento em dois subconjuntos. Vou desenhar uma linha aqui, e vamos colocar 70% dos dados na primeira parte e vou chamar isso de conjunto de treinamento. E a segunda parte dos dados, digamos que 30% dos dados, que vou colocar nela, esteja definida. E o que vamos fazer é treinar os modelos, os parâmetros do conjunto de treinamento nesses primeiros 70% ou mais dos dados e, em seguida, testaremos o desempenho dele nesse conjunto de testes. Em notação, vou usar x1, y1? O mesmo de antes, para denotar os exemplos de treinamento por meio de xm, ym, exceto que agora, para tornar explícito. Então, neste pequeno exemplo, teríamos sete exemplos de treinamento. E para introduzir uma nova notação, vou usar meu trem de assinaturas. O trem M é um número de exemplos de treinamento que, neste pequeno conjunto de dados, é 7. Portanto, o treinamento subscrito apenas enfatiza se estamos analisando a parte dos dados do conjunto de treinamento. E para o conjunto de testes, vou usar a notação x1 subscript test vírgula y1, subscript test para indicar o primeiro exemplo de teste, e isso vai até x mtest subscript tests, y mtest subscript tests e m tests é o número de exemplos de teste, que neste caso é 3. E não é incomum dividir seu conjunto de dados de acordo com talvez uma divisão de 70, 30 ou 80, 20, com a maioria dos dados indo para o conjunto de treinamento e, em seguida, uma fração menor indo para o conjunto de teste.
Reproduza o vídeo começando em :4:10 e siga a transcrição4:10
Então, para treinar um modelo e avaliá-lo, é assim que seria se você estivesse usando regressão linear com um custo de erro quadrado. Comece ajustando os parâmetros minimizando a função de custo j de w, b. Portanto, essa é a função de custo usual minimizar sobre w, b desse custo de erro quadrado, mais um termo de regularização maior que 2m vezes parte do w, j ao quadrado. E então, para saber o desempenho desse modelo, você calcularia o teste J de w, b, que é igual ao erro médio no conjunto de teste, e isso é apenas igual a 1/2 vezes o teste m. Esse é o número de exemplos de testes. E então, de um modo geral, os exemplos de r são iguais a 1, até o número de exemplos de teste da era quadrada em cada um dos exemplos de teste, da mesma forma. Portanto, é uma previsão sobre a entrada do exemplo de teste if menos o preço real da casa no exemplo de teste ao quadrado. E observe que o teste de fórmula de erro de teste J não inclui esse termo de regularização. E isso lhe dará uma ideia do desempenho do seu algoritmo de aprendizado. Uma das quantidades que geralmente são úteis para o computador, bem como o erro de treinamento, que é uma medida do desempenho do seu álbum de aprendizado no conjunto de treinamento.
Reproduza o vídeo começando em :5:46 e siga a transcrição5:46
Então, deixe-me definir o trem J de w, b como igual à média do conjunto de treinamento. 1 a mais de 2 m ou 1/2 m de trem inscrito de alguns sobre seu conjunto de treinamento desse termo de erro quadrado. E, mais uma vez, isso não inclui o termo de regularização, ao contrário da função de custo que você está minimizando para ajustar os parâmetros. Portanto, em um modelo como o que vimos anteriormente neste vídeo, o trem J de w, b será baixo porque a era média em seus exemplos de treinamento será zero ou muito próxima de zero. Então, o trem J estará muito próximo de zero. Mas se você tiver alguns exemplos adicionais em seu conjunto de testes nos quais o álbum não foi treinado, então esses exemplos de teste, minha vida amorosa, esses. E há uma grande lacuna entre o que o álbum está prevendo como o preço estimado da habitação e o valor real desses preços. E assim, os testes J serão altos. Portanto, ver que o teste J está no topo desse modelo, é uma maneira de perceber que, embora seja ótimo no conjunto de treinamento, na verdade não é muito bom em generalizar para novos exemplos para novos pontos de dados que não estavam no conjunto de treinamento. Então, isso foi regressão com custo de erro quadrático. Agora, vamos dar uma olhada em como você aplica esse procedimento a um problema de classificação. Por exemplo, se você estiver classificando entre dígitos manuscritos que são 0 ou 1, os mesmos de antes, ajuste os parâmetros minimizando a função de custo para encontrar os parâmetros w, b. Por exemplo, se você estivesse treinando regressão logística, essa seria a função de custo J de w, b, onde essa é a função de perda logística usual e, em seguida, mais também o termo de regularização. E para calcular o erro do teste, o teste J é então a média dos seus exemplos de teste, ou seja, 30% dos seus dados que não estavam no conjunto de treinamento da perda logística em seu conjunto de teste. E o erro de treinamento que você também pode calcular usando essa fórmula é a perda logística média em seus dados de treinamento que o álbum estava usando para minimizar a função de custo J de w, b. Bem, quando eu descrevi aqui funcionará, ok, para descobrir se seu algoritmo de aprendizado está indo bem, vendo como eu estava em termos de erro de teste. Ao aplicar o aprendizado de máquina a problemas de classificação, há, na verdade, outra definição de testes J e treinamento J que talvez seja ainda mais usada. Ou seja, em vez de usar a perda logística para calcular o erro de teste e o erro de treinamento para medir qual é a fração do conjunto de teste e a fração do conjunto de treinamento que o algoritmo classificou incorretamente. Então, especificamente no conjunto de testes, você pode fazer com que o algoritmo faça uma previsão de 1 ou 0 em cada exemplo de teste. Então, lembre-se de y_hat, predizeríamos 1 se f de x fosse maior que igual a 4,5 e zero se fosse menor que 0,5. E você pode então contar no conjunto de teste a fração de exemplos em que y_hat não é igual ao rótulo de verdade fundamental real enquanto estiver no conjunto de teste. Então, concretamente, se você estiver classificando dígitos manuscritos 0, 1 por meio de um novo sorteio de classificação, os testes J seriam a fração desse conjunto de testes, onde 0 foi classificado como 1 de 1, classificado como 0. E da mesma forma, o trem J é uma fração do conjunto de treinamento que foi classificado incorretamente. Pegar um conjunto de dados e dividi-lo em um conjunto de treinamento e um conjunto de testes separado oferece uma maneira de avaliar sistematicamente o desempenho de seus resultados de aprendizagem. Ao calcular os testes J e o treinamento J, agora você pode medir o desempenho no conjunto de testes e no conjunto de treinamento. Esse procedimento é uma etapa para que você possa escolher automaticamente qual modelo usar para um determinado aplicativo de aprendizado de máquina. Por exemplo, se você está tentando prever os preços da habitação, deve ajustar uma linha reta aos seus dados ou ajustar um polinômio de segunda ordem ou um polinômio de terceira ordem de quarta ordem? Acontece que, com mais um refinamento na ideia que você viu neste vídeo, você poderá ter um algoritmo que o ajude a tomar bem esse tipo de decisão automaticamente. Vamos dar uma olhada em como fazer isso no próximo vídeo.
