Até agora, conversamos muito sobre como treinar um modelo e também sobre como obter dados para seu aplicativo de aprendizado de máquina. Mas quando estou construindo um sistema de aprendizado de máquina, acho que treinar um modelo é apenas parte do quebra-cabeça. Neste vídeo, gostaria de compartilhar com vocês o que considero o ciclo completo de um projeto de aprendizado de máquina. Ou seja, quando você está construindo um valioso sistema de aprendizado de máquina, quais são as etapas a serem pensadas e planejadas? Vamos dar uma olhada, deixe-me usar o reconhecimento de fala como exemplo para ilustrar o ciclo completo de um projeto de aprendizado de máquina. A primeira etapa do projeto de aprendizado de máquina é definir o escopo do projeto. Em outras palavras, decida qual é o projeto e no que você quer trabalhar. Por exemplo, uma vez decidi trabalhar no reconhecimento de fala para pesquisa por voz. Isso é fazer pesquisas na web falando com seu telefone celular em vez de digitar em seu telefone celular. O escopo deste projeto. Depois de decidir em que trabalhar, você precisa coletar dados. Decida quais dados você precisa para treinar seu sistema de aprendizado de máquina e trabalhe para obter o áudio e obter as transcrições dos rótulos do seu conjunto de dados. Isso é coleta de dados. Depois de fazer sua coleta inicial de dados , você pode começar a treinar o modelo. Aqui você treinaria um sistema de reconhecimento de fala e análise de erros de caravela e melhoraria iterativamente seu modelo. Não é nada incomum. Depois de começar a treinar o modelo para análise de erros ou para uma análise de viés de variância, você pode querer voltar a coletar mais dados. Talvez colete mais dados de tudo ou simplesmente colete mais dados de um tipo específico em que sua análise de erros indique que você deseja melhorar o desempenho do seu algoritmo de aprendizado. Por exemplo, uma vez, ao trabalhar na fala, percebi que meu modelo estava se saindo muito mal quando havia ruído de carro ao fundo. Parecia que alguém estava falando em um carro. Meu sistema de fala funciona mal, decidi obter mais dados, na verdade usando o aumento de dados para obter mais dados de fala que parecem ser um carro, a fim de melhorar o desempenho do meu algoritmo de aprendizado. Você contorna esse ciclo algumas vezes, treina o modelo, analisa erros, volta a coletar mais dados, talvez faça isso por um tempo até que finalmente diga que o modelo é bom o suficiente para ser implantado em um ambiente de produção. Isso significa que você o disponibiliza para uso dos usuários. Ao implantar um sistema, você também precisa se certificar de continuar monitorando o desempenho do sistema e fazendo a manutenção do sistema, caso o desempenho piore, para recuperar o desempenho, em vez de apenas hospedar seu modelo de aprendizado de máquina em um servidor. Falarei um pouco mais sobre por que você precisa manter esses sistemas de aprendizado de máquina no próximo slide. Mas depois dessa implantação, às vezes você percebe que não está funcionando tão bem quanto você esperava e volta a treinar o modelo para melhorá-lo novamente ou até mesmo voltar e obter mais dados. Na verdade, se os usuários e você tiverem permissão para usar dados de sua implantação de produção, às vezes esses dados do seu sistema de fala funcional podem lhe dar acesso a ainda mais dados com os quais você pode continuar melhorando o desempenho do seu sistema. Agora, acho que você tem uma noção do que significa definir o escopo de um projeto e conversamos muito sobre coleta de dados e modelos de treinamento neste curso. Mas deixe-me compartilhar com vocês um pouco mais de detalhes sobre como seria a implantação na produção. Depois de treinar um modelo de aprendizado de máquina de alto desempenho, por exemplo, um modelo de reconhecimento de fala, uma forma comum de implantar o modelo seria pegar seu modelo de aprendizado de máquina e implementá-lo em um servidor, que vou chamar de servidor de inferência, cujo trabalho é chamar seu modelo de aprendizado de máquina, seu modelo treinado, para fazer previsões. Então, se sua equipe implementou um aplicativo móvel, por exemplo, um aplicativo social, quando um usuário fala com o aplicativo móvel, o aplicativo móvel pode fazer uma chamada de API para passar ao seu servidor de inferência o clipe de áudio que foi gravado e o trabalho do servidor de inferência é fornecer o modelo de aprendizado de máquina para ele e, em seguida, retornar a ele a previsão do seu modelo, que neste caso seriam as transcrições de texto do que foi dito. Essa seria uma maneira comum de implementar um aplicativo que chama por meio da API e do servidor de inferência em que seu modelo faz previsões repetidamente com base na entrada, x. Esse era um padrão comum em que depende do aplicativo é implementado. Você tem uma chamada de API para fornecer a entrada D do algoritmo de aprendizado, x e seu modelo de aprendizado de máquina na saída para a previsão, digamos yhat. Para implementar isso, pode ser necessária alguma engenharia de software para escrever todo o código que faz todas essas coisas. Dependendo se seu aplicativo precisa atender apenas alguns poucos usuários ou milhões de usuários, a quantidade de engenheiros de software necessários pode ser bem diferente. Eu criei um software que atende apenas alguns usuários em meu laptop e também criei um software que atende a centenas de milhões de usuários que precisam de recursos significativos de data center. Dependendo da aplicação de escala necessária, a engenharia de software pode ser necessária para garantir que seu servidor de inferência seja capaz de fazer previsões confiáveis e eficientes sobre o custo computacional não muito alto. Pode ser necessária engenharia de software para gerenciar a escalabilidade para um grande número de usuários. Freqüentemente, você deseja registrar os dados que está recebendo, tanto as entradas, x, quanto as previsões, y hat, supondo que a privacidade e o consentimento do usuário permitam que você armazene esses dados. Esses dados, se você puder acessá-los, também são muito úteis para o monitoramento do sistema. Por exemplo, uma vez construí um sistema de reconhecimento de voz com base em um determinado conjunto de dados que eu tinha, mas quando surgiram novas celebridades que de repente se tornaram conhecidas ou as eleições fizeram com que novos políticos fossem eleitos e as pessoas procuravam por esses novos nomes que não estavam no conjunto de treinamento, então meu sistema funcionou mal. Foi porque estávamos monitorando o sistema e nos permitiu descobrir quando os dados estavam mudando e o algoritmo estava se tornando menos preciso. Isso nos permitiu treinar novamente o modelo e, em seguida, realizar uma atualização do modelo para substituir o modelo antigo por um novo. O processo de implantação pode exigir algumas quantidades de engenharia de software. Para alguns aplicativos, se você o estiver executando apenas em um laptop ou em um ou dois servidores, talvez não seja necessária muita engenharia de software. Dependendo da equipe em que você está trabalhando, é possível que você tenha criado o modelo de aprendizado de máquina, mas pode haver uma equipe diferente responsável por implantá-lo. Mas há um campo crescente no aprendizado de máquina chamado MLOps. Isso significa Operações de aprendizado de máquina. Isso se refere à prática de como construir, implantar e manter sistematicamente sistemas de aprendizado de máquina. Fazer todas essas coisas para garantir que seu modelo de aprendizado de máquina seja confiável, escalável, tenha boas leis, seja monitorado e, então, você tenha a oportunidade de fazer atualizações no modelo conforme apropriado para mantê-lo funcionando bem. Por exemplo, se você estiver implantando seu sistema para milhões de pessoas, talvez queira garantir que tenha implementações altamente otimizadas para que o custo de computação de atender milhões de pessoas não seja muito caro. Neste e nos últimos analisadores, passei muito tempo falando sobre como treinar um modelo de aprendizado de máquina e entendi que essa é a peça fundamental para garantir que você tenha um sistema de alto desempenho. Se você precisar implantar o sistema para milhões de pessoas, essas são algumas etapas adicionais que provavelmente precisará abordar. Pense também no [inaudível] naquele momento. Antes de passar do tópico do processo de desenvolvimento de aprendizado de máquina, há mais um conjunto de ideias que quero compartilhar com você que se relaciona com a ética da construção de sistemas de aprendizado de máquina. Esse é um tópico crucial para muitos aplicativos, então vamos dar uma olhada nisso no próximo vídeo.
