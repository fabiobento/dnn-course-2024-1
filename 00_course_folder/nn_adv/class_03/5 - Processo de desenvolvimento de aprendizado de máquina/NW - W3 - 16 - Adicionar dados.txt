Neste vídeo, gostaria de compartilhar com vocês algumas dicas para adicionar dados ou coletar mais dados ou, às vezes, até mesmo criar mais dados para seu aplicativo de aprendizado de máquina. Apenas um aviso de que isso nos próximos vídeos parecerá um pouco como uma coleção de técnicas diferentes. E peço desculpas se parecer um pouco confuso, porque os aplicativos de aprendizado de máquina são diferentes. O aprendizado de máquina é aplicado a muitos problemas diferentes e, para alguns humanos, é ótimo para criar rótulos. E para alguns, você pode obter mais dados e, para outros, não. E é por isso que aplicativos diferentes às vezes exigem técnicas ligeiramente diferentes. Mas espero que nos próximos vídeos compartilhe com vocês algumas das técnicas que são consideradas mais úteis para diferentes aplicativos, embora nem todas se apliquem a cada aplicativo. Mas espero que muitos deles também sejam úteis para muitos dos aplicativos nos quais você trabalhará. Mas vamos dar uma olhada em algumas dicas de como adicionar dados ao seu aplicativo. Ao treinar algoritmos de aprendizado de máquina, parece que sempre gostaríamos de ter ainda mais dados quase o tempo todo. Por isso, às vezes é tentador obter mais dados de tudo. Mas tentar obter mais dados de todos os tipos pode ser lento e caro. Em vez disso, uma forma alternativa de adicionar dados pode ser focar em adicionar mais dados dos tipos em que a análise indicou que isso pode ajudar. No slide anterior, vimos que, se a análise de erros apontasse que o spam farmacêutico era um grande problema, talvez você decidisse fazer um esforço mais direcionado, não para obter mais dados, tudo sob o sol, mas para manter o foco em obter mais exemplos de spam farmacêutico. Com um custo mais modesto, isso pode permitir que você adicione apenas os e-mails de que precisa para esperar estar aprendendo e fique mais inteligente em reconhecer o spam farmacêutico. Então, um exemplo de como você pode fazer isso é: se você tiver muitos dados de e-mail não rotulados, digamos, e-mails parados e ninguém se preocupou em rotular ainda como spam ou não spam. Você pode pedir que seus funcionários examinem rapidamente os dados não rotulados e encontrem mais exemplos específicos de spam relacionado à indústria farmacêutica.
Reproduza o vídeo começando em :2:25 e siga a transcrição2:25
E isso pode aumentar o desempenho do seu algoritmo de aprendizado muito mais do que apenas tentar adicionar mais dados de todos os tipos de e-mails. Mas o padrão mais geral que espero que você tire disso é que, se você tiver algumas maneiras de adicionar mais dados de tudo, tudo bem. Não há nada de errado com isso. Mas se a análise de erros indicar que há certos subconjuntos de dados nos quais o álbum está se saindo particularmente mal. E no qual você deseja melhorar o desempenho e, em seguida, obter mais dados exatamente dos tipos em que você queria melhorar. Seja mais exemplos de spam farmacêutico ou mais exemplos de spam de phishing ou qualquer outra coisa. Essa pode ser uma maneira mais eficiente de adicionar apenas um pouco de dados, mas aumentar bastante o desempenho de seus algoritmos. Além de colocar suas mãos em novos exemplos de treinamento xy. Há outra técnica que eles usam especialmente para imagens e dados de áudio que podem aumentar significativamente o tamanho do seu conjunto de treinamento. Essa técnica é chamada de aumento de dados. E o que vamos fazer é pegar um exemplo de trem existente para criar um novo exemplo de treinamento. Por exemplo, se você estiver tentando reconhecer as letras de A a Z devido a um problema [inaudível] de reconhecimento óptico de caracteres. Portanto, não apenas os dígitos de 0 a 9, mas também as letras de A a Z. Dada uma imagem como essa, você pode decidir criar um novo exemplo de treinamento girando um pouco a imagem. Ou ampliando um pouco a imagem ou diminuindo um pouco ou alterando o contraste da imagem. E esses são exemplos de distorções na imagem que não mudam o fato de que ainda é a letra A. E para algumas letras, mas não para outras, você também pode pegar a imagem espelhada da letra e ela ainda se parece com a letra A. Mas isso só se aplica a algumas letras, mas essas seriam maneiras de pegar um exemplo de treinamento X, Y. E aplicar uma distorção ou transformação na entrada X, a fim de chegar a outro exemplo que tenha o mesmo rótulo. E ao fazer isso, você está dizendo ao algoritmo que a letra A girou um pouco ou aumentou um pouco ou diminuiu um pouco, ainda é a letra A. E criando exemplos adicionais como esse serve para o algoritmo de aprendizado, faça um trabalho melhor aprendendo a reconhecer a letra A.
Reproduza o vídeo começando em :5:1 e siga a transcrição5:01
Para obter um exemplo mais avançado de aumento de dados. Você também pode pegar a letra A e colocar uma grade em cima dela. E ao introduzir a distorção aleatória dessa grade, você pode pegar a letra A. E introduzir pinos de guerra do couro A para criar uma biblioteca muito mais rica de exemplos da letra A. E esse processo de distorção desses exemplos transformou uma imagem de um exemplo aqui em exemplos de treinamento que você pode fornecer ao algoritmo de aprendizado para que ele aprenda de forma mais robusta. O que é a letra A. Essa ideia de aumento de dados também funciona para reconhecimento de fala. Digamos que, para um aplicativo de pesquisa por voz, você tenha um clipe de áudio original com esse som. >> Qual é o clima de hoje. >> Uma maneira de aplicar a documentação de dados aos dados de fala seria obter um áudio de fundo ruidoso como esse. Por exemplo, é assim que soa o som de uma multidão.
Reproduza o vídeo começando em :6:8 e siga a transcrição6:08
E acontece que, se você pegar esses dois clipes de áudio, o primeiro e o ruído da multidão, e os somar, acabará com um clipe de áudio que soa assim. >> Qual é o clima de hoje. >> E você acabou de criar um clipe de áudio que parece alguém dizendo qual é a previsão do tempo hoje. Mas eles estão dizendo isso em meio à multidão barulhenta ao fundo. Ou, de fato, se você ouvisse um ruído de fundo diferente, digamos, alguém no carro, é assim que soa o ruído de fundo de um carro.
Reproduza o vídeo começando em :6:44 e siga a transcrição6:44
E você quer adicionar o clipe de áudio original ao ruído do carro, então você tem isso. >> Qual é o clima de hoje. >> E parece o clipe de áudio original, mas como se o alto-falante estivesse dizendo isso de um carro. E a etapa mais avançada de aumento de dados seria fazer com que o áudio original soasse como se estivesse gravando em uma conexão de celular ruim como essa.
Reproduza o vídeo começando em :7:10 e siga a transcrição7:10
Então, vimos como você pode pegar um clipe de áudio e transformá-lo em três exemplos de treinamento aqui, um com ruído de fundo da multidão, outro com ruído de fundo do carro e outro como se tivesse sido gravado em uma conexão ruim de telefone celular. E quando trabalhei em sistemas de reconhecimento de fala, essa era na verdade uma técnica muito crítica para aumentar artificialmente o tamanho dos dados de treinamento que eu tinha para criar um reconhecedor de fala mais preciso. Uma dica para o aumento de dados é que as alterações ou distorções que você faz nos dados devem ser representativas dos tipos de ruído ou distorções no conjunto de teste. Então, por exemplo, se você pegar a letra a e distorcê-la assim, isso ainda parecerá um exemplo de letras que você pode ver por aí e que gostaria de reconhecer. Ou para áudio que adiciona ruído de fundo ou conexão ruim de celular, se isso for representativo do que você espera aqui no conjunto de teste, essas serão maneiras úteis de aumentar os dados de áudio. Em contraste, geralmente não é tão útil em ruídos puramente aleatórios e sem sentido nos dados. Por exemplo, você pegou a letra A e eu adicionei ruído por pixel, onde se Xi é a intensidade ou o brilho do pixel i, se eu adicionasse ruído a cada pixel, eles acabariam com imagens parecidas com esta. Mas se, na medida em que isso não é tão representativo do que você vê no conjunto de teste, porque você não costuma obter imagens como essa no conjunto de testes, na verdade será menos útil. Então, uma forma de pensar sobre o aumento de dados é como você pode modificar, distorcer, distorcer ou fazer mais barulho em seus dados. Mas, de certa forma, o que você obtém ainda é bastante semelhante ao que você tem em seu conjunto de testes, porque é nisso que o algoritmo de aprendizado acabará se saindo bem. Agora, o aumento de dados pega um exemplo de treinamento existente e o modifica para criar outro exemplo de treinamento. Existe uma das técnicas, que é a síntese de dados, na qual você cria novos exemplos do zero. Não modificando um exemplo existente, mas criando novos exemplos. Então, veja o exemplo do OCR de fotos. O OCR de fotos ou reconhecimento óptico de caracteres fotográficos se refere ao problema de ver uma imagem como essa e fazer com que um computador leia automaticamente o texto que aparece nessa imagem. Portanto, há muito texto nessa imagem. Como você pode treinar o algoritmo de OCR para ler texto de uma imagem como essa? Bem, quando você olha de perto a aparência das letras nesta imagem, elas realmente se parecem com isso. Portanto, esses são dados reais de uma tarefa de OCR de fotos. E uma etapa importante da tarefa de OCR de fotos é poder ver uma pequena imagem como essa e reconhecer a letra no meio. Então, isso tem T no meio, isso tem a letra L no meio, isso tem a letra C no meio e assim por diante. Então, uma maneira de criar dados artificiais para essa tarefa é, se você acessar o editor de texto do seu computador, descobrir que ele tem muitas fontes diferentes e o que você pode fazer é pegar essas fontes e, basicamente, digitar texto aleatório em seu editor de texto. E capturada usando cores diferentes, contrastes diferentes e fontes muito diferentes, você obtém dados sintéticos como esses à direita.
Reproduza o vídeo começando em :10:50 e siga a transcrição10:50
As imagens à esquerda eram dados reais de fotos reais tiradas no mundo. As imagens à direita são geradas sinteticamente usando fundos no computador e, na verdade, parecem bastante realistas. Portanto, com a geração de dados sintéticos como essa, você pode gerar um grande número de imagens ou exemplos para sua tarefa de OCR de fotos. Pode ser muito trabalhoso escrever o código para gerar dados sintéticos com aparência realista para um determinado aplicativo. Mas quando você gasta tempo fazendo isso, às vezes isso pode ajudá-lo a gerar uma grande quantidade de dados para seu aplicativo e dar um grande impulso ao desempenho de seus álbuns.
Reproduza o vídeo começando em :11:33 e siga a transcrição11:33
A geração de dados sintéticos tem sido usada provavelmente para análise de visão computacional e menos para outras aplicações. Também não é muito para palestras em áudio. Todas as técnicas que você viu neste vídeo estão relacionadas a encontrar maneiras de criar os dados usados pelo seu sistema. Da mesma forma que o aprendizado de máquina se desenvolveu nas últimas décadas, muitas décadas. A atenção da maioria dos pesquisadores de aprendizado de máquina estava na abordagem centrada no modelo convencional e aqui está o que quero dizer. Um sistema de aprendizado de máquina ou um sistema de IA inclui o código para implementar seu álbum ou seu modelo, bem como os dados para os quais você treina no modelo de algoritmo. e nas últimas décadas, a maioria dos pesquisadores que fazem pesquisas sobre aprendizado de máquina baixava o conjunto de dados e mantinha os dados fixos enquanto se concentravam em melhorar o código, o algoritmo ou o modelo.
Reproduza o vídeo começando em :12:29 e siga a transcrição12:29
Graças a esse paradigma da pesquisa de aprendizado de máquina. Acho que hoje o algoritmo ao qual temos acesso, como regressão linear, regressão logística, redes neurais e árvores de decisão, devemos ver na próxima semana. Existem algoritmos que já são muito bons e funcionarão bem para muitos aplicativos. Por isso, às vezes pode ser mais proveitoso passar mais tempo adotando uma abordagem centrada em dados, na qual você se concentra na engenharia dos dados usados pelo seu algoritmo. E isso pode ser qualquer coisa, desde coletar mais dados apenas sobre spam farmacêutico. Se é isso que a análise de erros disse que você deveria fazer. Até usar o aumento de dados para gerar mais imagens ou mais áudio ou usar a síntese de dados apenas para criar mais exemplos de treinamento. E, às vezes, esse foco nos dados pode ser uma forma eficiente de ajudar seu algoritmo de aprendizado a melhorar seu desempenho. Portanto, espero que este vídeo ofereça um conjunto de ferramentas para ser eficiente e eficaz na forma como você adiciona mais dados para que seu algoritmo de aprendizado funcione melhor.
Reproduza o vídeo começando em :13:38 e siga a transcrição13:38
Agora, também existem alguns aplicativos em que você simplesmente não tem muitos dados e é muito difícil obter mais dados. Acontece que existe uma técnica chamada aprendizado por transferência que pode ser aplicada nessa configuração para dar um grande impulso ao desempenho do seu algoritmo de aprendizado. E a ideia principal é obter dados de tarefas totalmente diferentes, pouco relacionadas. Mas, usando uma rede neural, às vezes há maneiras de usar esses dados de tarefas muito diferentes para melhorar o desempenho do algoritmo no aplicativo. Não se aplica a tudo, mas quando isso acontece, pode ser muito poderoso. Vamos dar uma olhada no próximo vídeo e ver como funciona o aprendizado por transferência.
