No último vídeo, você viu como uma rede neural funciona em um exemplo de previsão de demanda. Vamos dar uma olhada em como você pode aplicar um tipo similar de ideia a um aplicativo de visão computacional. Vamos mergulhar. Se você estiver criando um aplicativo de reconhecimento facial, talvez queira treinar uma rede neural que pegue como entrada uma imagem como essa e exiba a identidade da pessoa na foto. Essa imagem tem 1.000 por 1.000 pixels. Sua representação no computador é, na verdade, como uma grade de 1.000 por 1.000, ou também chamada de matriz de 1.000 por 1.000 de valores de intensidade de pixels. Neste exemplo, meus valores de intensidade de pixel ou valores de brilho de pixels vão de 0 a 255 e, portanto, 197 aqui seria o brilho do pixel no canto superior esquerdo da imagem, 185 é o brilho do pixel, um pixel acima e assim por diante até 214 seria o canto inferior direito desta imagem. Se você pegasse esses valores de intensidade de pixels e os desenrolasse em um vetor, acabaria com uma lista ou um vetor de um milhão de valores de intensidade de pixels. Um milhão porque 1.000 por 1.000 quadrados fornece um milhão de números. O problema do reconhecimento facial é: você pode treinar uma rede neural que toma como entrada um vetor de características com um milhão de valores de brilho de pixels e gera a identidade da pessoa na foto. É assim que você pode construir uma rede neural para realizar essa tarefa. A imagem de entrada X é enviada para essa camada de neurônios. Essa é a primeira camada oculta, que então extrai algumas feições. A saída dessa primeira camada oculta é alimentada para uma segunda camada oculta e essa saída é alimentada para uma terceira camada e, finalmente, para a camada de saída, que então estima, digamos, a probabilidade de ser uma pessoa em particular. Uma coisa interessante seria observar uma rede neural que foi treinada em muitas imagens de rostos e tentar visualizar o que são essas camadas ocultas, tentando computar. Acontece que quando você treina um sistema como esse em muitas fotos de rostos e examina os diferentes neurônios nas camadas ocultas para descobrir o que eles podem estar computando, isso é o que você pode encontrar. Na primeira camada oculta, você pode encontrar um neurônio que está procurando a linha vertical baixa ou uma borda vertical como essa. Um segundo neurônio procurando por uma linha orientada ou borda orientada como essa. O terceiro neurônio procurando uma linha nessa orientação, e assim por diante. Nas primeiras camadas de uma rede neural, você pode descobrir que os neurônios estão procurando linhas muito curtas ou bordas muito curtas na imagem. Se você observar a próxima camada oculta, descobrirá que esses neurônios podem aprender a agrupar muitas pequenas linhas curtas e pequenos segmentos de borda curtos para procurar partes de faces. Por exemplo, cada uma dessas pequenas caixas quadradas é uma visualização do que aquele neurônio está tentando detectar. Esse primeiro neurônio parece estar tentando detectar a presença ou ausência de um olho em uma determinada posição da imagem. O segundo neurônio parece estar tentando detectar como um canto do nariz e talvez esse neurônio aqui esteja tentando detectar o fundo de uma orelha. Então, ao observar a próxima camada oculta neste exemplo, a rede neural está agregando diferentes partes das faces para tentar detectar a presença ou ausência de formas faciais maiores e mais grossas. Finalmente, detectar o quanto o rosto corresponde a diferentes formatos de rosto cria um rico conjunto de recursos que ajudam a camada de saída a tentar determinar a identidade da foto da pessoa. Uma coisa notável sobre a rede neural é que você pode aprender esses detectores de recursos nas diferentes camadas ocultas por si só. Neste exemplo, ninguém nunca lhe disse que procurasse bordas curtas na primeira camada, olhos, narizes e partes do rosto na segunda camada e, em seguida, formas de rosto mais completas na terceira camada. A rede neural é capaz de descobrir essas coisas sozinha a partir de dados. Apenas uma observação: nesta visualização, os neurônios na primeira camada oculta são mostrados olhando para janelas relativamente pequenas para procurar essas bordas. Na segunda camada oculta está olhando para uma janela maior, e a terceira camada oculta está olhando para uma janela ainda maior. Essas visualizações de pequenos neurônios, na verdade, correspondem a regiões de tamanhos diferentes na imagem. Só por diversão, vamos ver o que acontece se você treinar essa rede neural em um conjunto de dados diferente, digamos, em muitas fotos de carros, foto ao lado. O mesmo algoritmo de aprendizado é solicitado para detectar carros e, em seguida, aprenderá as bordas na primeira camada. Muito parecido, mas depois eles aprenderão a detectar partes de carros na segunda camada oculta e, em seguida, formas mais completas de carros na terceira camada oculta. Apenas fornecendo dados diferentes, a rede neural aprende automaticamente a detectar características muito diferentes para tentar fazer as previsões de detecção de carros ou reconhecimento de pessoas ou se há uma determinada tarefa treinada. É assim que uma rede neural funciona para aplicativos de visão computacional. Na verdade, no final desta semana, você verá como criar uma rede neural sozinho e aplicá-la a um aplicativo de reconhecimento de dígitos manuscrito. Até agora, examinamos a descrição das intuições das redes neurais para dar uma ideia de como elas funcionam. No próximo vídeo, vamos examinar mais profundamente a matemática concreta e uma implementação concreta de detalhes de como você realmente constrói uma ou mais camadas de uma rede neural e, portanto, como você mesmo pode implementar uma dessas coisas. Vamos para o próximo vídeo.
