Para ilustrar como as redes neurais funcionam, vamos começar com um exemplo. Usaremos um exemplo de previsão de demanda em que você analisa o produto e tenta prever se esse produto será um dos mais vendidos ou não? Vamos dar uma olhada. Neste exemplo, você está vendendo camisetas e gostaria de saber se uma camiseta específica será a mais vendida, sim ou não, e você coletou dados de diferentes camisetas que foram vendidas a preços diferentes, bem como quais delas se tornaram as mais vendidas.
Reproduza o vídeo começando em ::33 e siga a transcrição0:33
Atualmente, esse tipo de aplicativo é usado pelos varejistas para planejar melhores níveis de estoque e campanhas de marketing. Se você sabe o que provavelmente será um dos mais vendidos, planejaria, por exemplo, comprar mais dessas ações com antecedência. Neste exemplo, o recurso de entrada x é o preço da camiseta e, portanto, essa é a entrada para o algoritmo de aprendizado. Se você aplicar a regressão logística para ajustar uma função sigmóide aos dados que possam ter essa aparência, as saídas de sua previsão poderão ter a seguinte aparência, 1/1 mais e para menos wx mais b. Anteriormente, escrevíamos isso como f de x como a saída do algoritmo de aprendizado. Para nos preparar para construir uma rede neural, vou mudar um pouco a terminologia e usar o alfabeto a para indicar a saída desse algoritmo de regressão logística. O termo a significa ativação e, na verdade, é um termo da neurociência, e se refere ao quanto um neurônio está enviando uma alta saída para outros neurônios a jusante dele. Acontece que essas unidades de regressão logística ou esse pequeno algoritmo de regressão logística podem ser pensados como um modelo muito simplificado de um único neurônio no cérebro. O que o neurônio faz é nos levar para inserir o preço x e, em seguida, computar essa fórmula na parte superior, gerar o número a, que é calculado por essa fórmula, e gerar a probabilidade dessa camiseta ser uma das mais vendidas. Outra maneira de pensar em um neurônio é como um pequeno computador cujo único trabalho é inserir um número ou alguns números, como um preço, e então gerar um número ou talvez alguns outros números, o que, neste caso, é a probabilidade de a camiseta ser uma das mais vendidas. Como mencionei no vídeo anterior, um algoritmo de regressão logística é muito mais simples do que qualquer neurônio biológico em seu cérebro ou no meu. É por isso que a rede neural artificial é um modelo tão simplificado do cérebro humano. Embora, na prática, como você sabe, os algoritmos de aprendizado profundo funcionem muito bem. Dada essa descrição de um único neurônio, construir uma rede neural agora requer apenas pegar um monte desses neurônios e conectá-los ou juntá-los. Vejamos agora um exemplo mais complexo de previsão de demanda. Neste exemplo, teremos quatro recursos para prever se uma camiseta é ou não a mais vendida. As características são o preço da camiseta, os custos de envio, a quantidade de marketing dessa camiseta em particular, bem como a qualidade do material. É um algodão grosso de alta qualidade versus talvez um material de qualidade inferior? Agora, você pode suspeitar que o fato de uma camiseta se tornar uma das mais vendidas, na verdade, depende de alguns fatores. Primeiro, uma é a acessibilidade dessa camiseta. A segunda é: qual é o grau de conhecimento dessa camiseta que os potenciais compradores têm? O terceiro é a percepção de qualidade em relação ao preconceito ou potencial preconceito, dizendo que esta é uma camiseta de alta qualidade. O que vou fazer é criar um neurônio artificial para tentar estimar a probabilidade de essa camiseta ser considerada altamente acessível. A acessibilidade é principalmente uma função do preço e dos custos de envio, porque o valor total do pagamento é parte do preço mais os custos de envio. Vamos usar um pequeno neurônio aqui, uma unidade de regressão logística para inserir preços e custos de envio e prever se as pessoas acham que isso é acessível? Em segundo lugar, vou criar outro neurônio artificial aqui para estimar se há muita consciência disso? A conscientização, neste caso, é principalmente uma função do marketing da camiseta. Finalmente, vou criar outro neurônio para estimar se as pessoas percebem que isso é de alta qualidade, e isso pode ser principalmente uma função do preço da camiseta e da qualidade do material. O preço é um fator aqui porque, felizmente ou infelizmente, se houver uma camiseta com um preço muito alto, as pessoas às vezes percebem que ela é de alta qualidade porque é muito cara do que talvez as pessoas pensem que será de alta qualidade. Dadas essas estimativas de acessibilidade, consciência e qualidade percebida, conectamos as saídas desses três neurônios a outro neurônio aqui à direita, para que então haja outra unidade de regressão logística. Isso finalmente insere esses três números e gera a probabilidade dessa camiseta ser uma das mais vendidas. Na terminologia das redes neurais, vamos agrupar esses três neurônios no que é chamado de camada. Uma camada é um agrupamento de neurônios que recebe como entrada características iguais ou similares e que, por sua vez, gera alguns números juntos. Esses três neurônios à esquerda formam uma camada, e é por isso que os desenhei um em cima do outro, e esse único neurônio à direita também é uma camada. A camada à esquerda tem três neurônios, então uma camada pode ter vários neurônios ou também pode ter um único neurônio, como no caso dessa camada à direita. Essa camada à direita também é chamada de camada de saída porque as saídas desse neurônio final são a probabilidade de saída prevista pela rede neural. Na terminologia de redes neurais, também chamaremos de consciência de acessibilidade e percepção de qualidade como ativações. O termo ativações vem de neurônios biológicos e se refere ao grau em que o neurônio biológico está enviando um alto valor de saída ou enviando muitos impulsos elétricos para outros neurônios a jusante dele. Esses números de acessibilidade, consciência e qualidade percebida são as ativações desses três neurônios nessa camada, e também essa probabilidade de saída é a ativação desse neurônio mostrada aqui à direita. Essa rede neural específica , portanto, realiza os cálculos da seguinte forma. Ele insere quatro números e, em seguida, essa camada da rede neural usa esses quatro números para calcular os novos números, também chamados de valores de ativação. Em seguida, a camada final, a camada de saída da rede neural, usou esses três números para calcular um número. Em uma rede neural, essa lista de quatro números também é chamada de camada de entrada, e isso é apenas uma lista de quatro números. Agora, há uma simplificação que eu gostaria de fazer nesta rede neural. Do jeito que descrevi até agora, tivemos que examinar os neurônios um de cada vez e decidir quais entradas seriam obtidas da camada anterior. Por exemplo, dissemos que a acessibilidade é uma função apenas do preço e dos custos de envio e a conscientização é uma função apenas do marketing e assim por diante, mas se você estiver construindo uma grande rede neural, seria muito trabalhoso decidir manualmente quais neurônios devem usar quais recursos como entradas. A forma como uma rede neural é implementada na prática , cada neurônio em uma determinada camada; digamos que essa camada no meio terá acesso a todas as características, a todos os valores da camada anterior, da camada de entrada, e é por isso que agora estou desenhando setas de cada recurso de entrada para cada um desses neurônios mostrados aqui no meio. Você pode imaginar que, se estiver tentando prever a acessibilidade e souber qual é o preço, o custo de envio, o marketing e o material, talvez você aprenda a ignorar o marketing e o material e a descobrir, definindo os parâmetros de forma adequada, para se concentrar apenas no subconjunto de recursos que são mais relevantes para a acessibilidade. Para simplificar ainda mais a notação e a descrição dessa rede neural, vou pegar esses quatro recursos de entrada e escrevê-los como um vetor x, e vamos ver a rede neural como tendo quatro recursos que compõem esse vetor de recursos x. Esse vetor de recursos é alimentado para essa camada no meio, que então calcula três valores de ativação. Esses são esses números e esses três valores de ativação, por sua vez, se tornam outro vetor que é alimentado para essa camada de saída final que finalmente gera a probabilidade dessa camiseta ser uma das mais vendidas. Isso é tudo que uma rede neural é. Tem algumas camadas em que cada camada insere um vetor e gera outro vetor de números. Por exemplo, essa camada no meio insere quatro números x e gera três números correspondentes à acessibilidade , reconhecimento e qualidade percebida. Para adicionar um pouco mais de terminologia, você viu que essa camada é chamada de camada de saída e essa camada é chamada de camada de entrada. Para dar também um nome à camada do meio, essa camada do meio é chamada de camada oculta. Eu sei que esse talvez não seja o melhor ou o nome mais intuitivo, mas essa terminologia vem de quando você tem um conjunto de treinamento. Em um conjunto de treinamento, você pode observar x e y. Seu conjunto de dados informa o que é x e o que é y e, portanto, você obtém dados que informam quais são as entradas e saídas corretas. Mas seu conjunto de dados não informa quais são os valores corretos de acessibilidade , reconhecimento e qualidade percebida. Os valores corretos para eles estão ocultos. Você não os vê no conjunto de treinamento, e é por isso que essa camada no meio é chamada de camada oculta. Gostaria de compartilhar com vocês outra maneira de pensar sobre redes neurais que achei útil para construir minha intuição sobre elas. Deixe-me cobrir a metade esquerda desse diagrama e ver o que nos resta. O que você vê aqui é que existe um algoritmo de regressão logística ou unidade de regressão logística que usa como entrada, acessibilidade , reconhecimento e qualidade percebida de uma camiseta e usa esses três recursos para estimar a probabilidade de a camiseta ser uma das mais vendidas. Isso é apenas regressão logística. Mas o legal disso é que, em vez de usar os recursos originais, o preço, o custo de envio, o marketing e assim por diante, é usar talvez um conjunto melhor de recursos, acessibilidade, reconhecimento e qualidade percebida, que, esperançosamente, predizem se essa camiseta será ou não uma das mais vendidas. Uma maneira de pensar nessa rede neural é apenas a regressão logística. Mas, como uma versão da regressão logística, eles podem aprender seus próprios recursos que facilitam a realização de previsões precisas.
Reproduza o vídeo começando em :12:4 e siga a transcrição12:04
Na verdade, você deve se lembrar do curso anterior, desse exemplo de moradia, em que dissemos que, se você quiser prever o preço da casa, você pode pegar a fachada ou a largura dos lotes e multiplicá-la pela profundidade de um lote para construir uma característica mais complexa, x_1 vezes x_2, que era do tamanho do gramado. Lá, estávamos fazendo engenharia manual de recursos, onde tínhamos que examinar os recursos x_1 e x_2 e decidir manualmente como combiná-los para criar recursos melhores. O que a rede neural faz é que, em vez de você precisar projetar manualmente os recursos, ela pode aprender, como você verá mais tarde, seus próprios recursos para tornar o problema de aprendizado mais fácil para si mesma. É isso que torna as redes neurais um dos algoritmos de aprendizado mais poderosos do mundo atualmente. Resumindo, uma rede neural faz isso, a camada de entrada tem um vetor de características, quatro números neste exemplo, é entrada para a camada oculta, que gera três números. Vou usar um vetor para denotar esse vetor de ativações que essa camada oculta gera. Em seguida, a camada de saída leva sua entrada para três números e gera um número, que seria a ativação final ou a previsão final da rede neural. Uma observação: embora eu tenha descrito anteriormente essa rede neural como acessibilidade computacional , reconhecimento e qualidade percebida, uma das propriedades mais interessantes de uma rede neural é que, quando você a treina a partir de dados, você não precisa decidir explicitamente quais outros recursos, como acessibilidade e assim
Reproduza o vídeo começando em :13:43 e siga a transcrição13:43
por diante, a rede neural deve computar ou descobrir sozinha quais são os recursos que deseja usar nessa camada oculta. É isso que o torna um algoritmo de aprendizado tão poderoso. Você viu aqui um exemplo de uma rede neural e essa rede neural tem uma única camada que é uma camada oculta. Vamos dar uma olhada em alguns outros exemplos de redes neurais, especificamente, exemplos com mais de uma camada oculta. Aqui está um exemplo. Essa rede neural tem um vetor de recurso de entrada X que é alimentado a uma camada oculta. Vou chamar isso de a primeira camada oculta. Se essa camada oculta tiver três neurônios, ela produzirá um vetor de três valores de ativação. Esses três números podem então ser inseridos na segunda camada oculta. Se a segunda camada oculta tiver dois neurônios para unidades logísticas, essa segunda oculta produzirá outro vetor de agora dois valores de ativação que talvez vá para a camada de saída que então gera a previsão final da rede neural. Aqui está outro exemplo. Aqui está uma rede neural em que sua entrada vai para a primeira camada oculta, a saída da primeira camada oculta vai para a segunda camada oculta, vai para a terceira camada oculta e, finalmente, para a camada de saída. Quando você está construindo sua própria rede neural, uma das decisões que você precisa tomar é quantas camadas ocultas você quer e quantos neurônios você quer que cada camada oculta tenha. Essa questão de quantas camadas ocultas e quantos neurônios por camada oculta é uma questão de arquitetura da rede neural. Mais adiante, neste curso, você aprenderá algumas dicas para escolher uma arquitetura apropriada para uma rede neural. Mas escolher o número certo de camadas ocultas e o número de unidades ocultas por camada
Reproduza o vídeo começando em :15:39 e siga a transcrição15:39
também pode ter um impacto no desempenho de um algoritmo de aprendizado. Posteriormente neste curso, você também aprenderá como escolher uma boa arquitetura para sua rede neural. A propósito, em parte da literatura, você vê esse tipo de rede neural com várias camadas, como essa, chamada de perceptron multicamada. Se você ver isso, isso se refere apenas a uma rede neural parecida com a que você está vendo aqui no slide. É uma rede neural. Eu sei que passamos por muita coisa neste vídeo. Obrigado por ficar comigo. Mas agora você sabe como uma rede neural funciona. No próximo vídeo, vamos dar uma olhada em como essas ideias também podem ser aplicadas a outros aplicativos. Em particular, daremos uma olhada no aplicativo de visão computacional do reconhecimento facial. Vamos para o próximo vídeo.
(Obrigatória)
pt-BR
​

