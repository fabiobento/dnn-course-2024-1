No último vídeo, você viu como implementar o forward prop em Python, mas codificando linhas de código para cada neurônio. Vamos agora dar uma olhada na implementação mais geral do forward prop em Python. Semelhante ao vídeo anterior, meu objetivo neste vídeo é mostrar o código para que, ao vê-lo novamente em seu laboratório prático, nos laboratórios opcionais, você saiba como interpretá-lo. Ao analisarmos esse exemplo, não se preocupe em fazer anotações em cada linha de código. Se você puder ler o código e entendê-lo, isso é definitivamente o suficiente. O que você pode fazer é escrever uma função para implementar uma camada densa, que é uma única camada de uma rede neural. Vou definir a função densa, que toma como entrada a ativação da camada anterior, bem como os parâmetros w e b para os neurônios em uma determinada camada. Usando o exemplo do vídeo anterior, se a camada 1 tiver três neurônios e se w_1 e w_2 e w_3 forem esses, o que faremos é empilhar todos esses vetores de onda em uma matriz. Essa será uma matriz de dois por três, onde a primeira coluna é o parâmetro w_1,1, a segunda coluna é o parâmetro w_1 , 2 e a terceira coluna é o parâmetro w_1,3.
Reproduza o vídeo começando em :1:38 e siga a transcrição1:38
Então, de forma semelhante, se você tiver parâmetros be, b_1,1 é igual a menos um, b_1,2 é igual a um e assim por diante, então vamos empilhar esses três números em uma matriz 1D b da seguinte forma, menos um, um, dois. O que a função densa fará é tomar como entrada a ativação da camada anterior, e a aqui pode ser a_0, que é igual a x, ou a ativação de uma camada posterior, bem como os parâmetros w empilhados em colunas, como mostrado à direita, bem como os parâmetros b também empilhados em uma matriz 1D, como mostrado à esquerda ali. O que essa função faria é inserir uma para a ativação da camada anterior e gerar as ativações da camada atual. Vamos examinar o código para fazer isso. Aqui está o código. Primeiro, unidades são iguais a W.shape,1. W aqui está uma matriz de dois por três e, portanto, o número de colunas é três. Isso é igual ao número de unidades nessa camada. Aqui, as unidades seriam iguais a três. Observar a forma de w é apenas uma forma de extrair o número de unidades ocultas ou o número de unidades nessa camada. Em seguida, definimos a como uma matriz de zeros com tantos elementos quanto unidades. Neste exemplo, precisamos gerar três valores de ativação, então isso apenas inicializa a como zero, zero, zero, uma matriz de três zeros. Em seguida, passamos por um loop for para calcular o primeiro, o segundo e o terceiro elementos de a. Para j em unidades de intervalo, então j vai de zero para unidades menos um. Ele vai de 0, 1, 2, indexação a partir de zero e Python, como de costume. Esse comando w é igual a W dois pontos vírgula j, é assim que você retira a jésima coluna de uma matriz em Python. Na primeira vez que passar por esse loop, isso puxará a primeira coluna de w e, portanto, retirará w_1,1. Na segunda vez nesse loop, ao calcular a ativação da segunda unidade, extrairá a segunda coluna correspondente a w_1 , 2 e assim por diante pela terceira vez por meio desse loop.
Reproduza o vídeo começando em :4:14 e siga a transcrição4:14
Então você calcula z usando a fórmula usual, é um produto pontual entre esse parâmetro w e a ativação que você recebeu, mais b, j. E então você calcula a ativação a, j, é igual a g, função sigmóide aplicada a z. Três vezes por meio desse loop e você o calcula, os valores de todos os três valores desse vetor de ativação são a. Então, finalmente, você retorna a. O que a função densa faz é inserir o ativações da camada anterior e, dados os parâmetros da camada atual, ele retorna as ativações para a próxima camada. Dada a função densa, veja como você pode unir algumas camadas densas sequencialmente, a fim de implementar o suporte direto na rede neural.
Reproduza o vídeo começando em :5:5 e siga a transcrição5:05
Dadas as características de entrada x, você pode então calcular as ativações a_1 como sendo a_1 igual à densidade de x, w_1, b_1, onde aqui w_1, b_1 são os parâmetros, às vezes também chamados de pesos da primeira camada oculta. Em seguida, você pode calcular a_2 como denso de agora a_1, que você acabou de calcular acima. W_2, b-2, que são os parâmetros ou pesos dessa segunda camada oculta. Em seguida, calcule a_3 e a_4.
Reproduza o vídeo começando em :5:42 e siga a transcrição5:42
Se for uma rede neural com quatro camadas, defina que a saída f de x é igual a a_4, e então você retorna f de x. Observe que aqui eu estou usando W, porque de acordo com as convenções notacionais da álgebra linear é usar maiúsculas ou um alfabeto maiúsculo é quando está se referindo a uma matriz e minúsculas se referem a vetores e escalares. Então, porque é uma matriz, isso é W. É isso. Agora você sabe como implementar o suporte avançado sozinho do zero. Você também pode ver todo esse código, executá-lo e praticá-lo sozinho no laboratório prático. Acho que mesmo quando você usa bibliotecas poderosas como o TensorFlow, é útil saber como elas funcionam nos bastidores. Porque caso algo dê errado, caso algo corra muito lentamente, ou você tenha um resultado estranho, ou pareça que há um bug, sua capacidade de entender o que realmente está acontecendo o tornará muito mais eficaz ao depurar seu código. Quando executo algoritmos de aprendizado de máquina na maioria das vezes, francamente, isso não funciona. Sophie, não é a primeira vez. Acho que minha capacidade de depurar meu código para ser um código do TensorFlow ou qualquer outra coisa é muito importante para ser um engenheiro de aprendizado de máquina eficaz. Mesmo usando o TensorFlow ou alguma outra estrutura, espero que você ache esse entendimento mais profundo útil para seus próprios aplicativos e também para depurar seus próprios algoritmos de aprendizado de máquina. É isso mesmo. Esse é o último vídeo obrigatório desta semana com código. No próximo vídeo, gostaria de mergulhar no que eu acho um tópico divertido e fascinante, que é: qual é a relação entre redes neurais e IA ou AGI, inteligência artificial geral? Esse é um tópico controverso, mas como tem sido amplamente discutido, quero compartilhar com vocês algumas ideias sobre isso. Quando lhe perguntam se as redes neurais estão no caminho da inteligência em nível humano? Você tem uma estrutura para pensar sobre essa questão.
Reproduza o vídeo começando em :7:49 e siga a transcrição7:49
Acho que vamos dar uma olhada nesse tópico divertido no próximo vídeo.
(Obrigatória)
pt-BR
​

