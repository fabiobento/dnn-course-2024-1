O TensorFlow é uma das principais estruturas para a implementação de algoritmos de aprendizado profundo. Quando estou criando projetos, o TensorFlow é, na verdade, a ferramenta que eu uso com mais frequência. A outra ferramenta popular é o PyTorch. Mas vamos nos concentrar nessa especialização no TensorFlow. Neste vídeo, vamos dar uma olhada em como você pode implementar o código de inferência usando o TensorFlow. Vamos mergulhar. Uma das coisas mais notáveis sobre redes neurais é que o mesmo algoritmo pode ser aplicado a muitas aplicações diferentes. Neste vídeo e em alguns laboratórios para você ver o que a rede neural está fazendo, vou usar outro exemplo para ilustrar a inferência. Às vezes eu gosto de torrar grãos de café sozinho em casa. Meu favorito é, na verdade, grãos de café colombianos. O algoritmo de aprendizado pode ajudar a otimizar a qualidade dos grãos que você obtém de um processo de torrefação como esse? Quando você está torrando café, dois parâmetros que você controla são a temperatura na qual você aquece os grãos de café crus para transformá-los em grãos de café bem torrados, bem como a duração ou por quanto tempo você vai torrar os grãos. Neste exemplo um pouco simplificado, criamos conjuntos de dados de diferentes temperaturas e durações diferentes, bem como rótulos mostrando se o café que você torrou é um café saboroso. Onde cruz aqui, a cruz positiva y igual a 1 corresponde a um bom café, e toda a cruz negativa corresponde a café ruim. Parece que uma maneira razoável de pensar nesse conjunto de dados é cozinhá-lo em uma temperatura muito baixa, ele não ficar torrado e acabar mal cozido. Se você cozinhá-lo, não por tempo suficiente, a duração é muito curta, também não é um conjunto de feijão bem torrado. Finalmente, se você cozinhá-lo por muito tempo ou em uma temperatura muito mais alta , acabará com feijão cozido demais. São um pouco de feijão queimado. Também não há um bom café. São apenas os pontos dentro desse pequeno triângulo que correspondem a um bom café. Este exemplo é um pouco simplificado em relação à torrefação real do café. Embora este exemplo seja simplificado para fins de ilustração, também existem projetos sérios usando aprendizado de máquina para otimizar a torrefação de café. A tarefa recebe um vetor de características x com temperatura e duração, digamos, 200 graus Celsius por 17 minutos. Como podemos fazer inferências em uma rede neural para que ela nos diga se essa configuração de temperatura e duração resultará em um bom café ou não? Parece assim. Vamos definir x como uma matriz de dois números. A entrada apresenta 200 graus Celsius e 17 minutos. Em seguida, você cria a Camada 1 como essa primeira camada oculta, a rede neural, como unidades de parênteses abertas densas 3, o que significa três unidades ou três unidades ocultas nessa camada usando como função de ativação, a função sigmóide. Dense é outro nome para as camadas de uma rede neural que conhecemos até agora. À medida que você aprende mais sobre redes neurais, você também aprende sobre outros tipos de camadas. Mas, por enquanto, usaremos apenas a camada densa, que é o tipo de camada que você aprendeu nos últimos vídeos para todos os nossos exemplos. Em seguida, você calcula a1 pegando a Camada 1, que na verdade é uma função, e aplicando essa função Camada 1 aos valores de x. É assim que você obtém a1, que será uma lista de três números porque a Camada 1 tinha três unidades. Portanto, a1 aqui pode, apenas para fins de ilustração, ser 0,2, 0,7, 0,3. Em seguida, para a segunda camada oculta, a camada 2, seria densa. Agora, desta vez, ele tem uma unidade e novamente a função de ativação sigmóide, e você pode então calcular a2 aplicando essa função de camada 2 aos valores de ativação da camada 1 a a1. Isso lhe dará o valor de a2, que, para fins de ilustração, talvez seja 0,8. Finalmente, se você quiser limitá-lo em 0,5, basta testar se a2 é maior e igual a 0,5 e definir y-hat igual a um ou zero cruz positiva ou negativa de acordo. É assim que você faz inferências na rede neural usando o TensorFlow. Há alguns detalhes adicionais que eu não analisei aqui, como carregar a biblioteca TensorFlow e como também carregar os parâmetros w e b da rede neural. Mas vamos falar sobre isso no laboratório. Por favor, não deixe de dar uma olhada no laboratório. Mas essas são as principais etapas para a propagação futura na forma como você calcula a1 e a2 e, opcionalmente, limita a2. Vejamos mais um exemplo e voltaremos ao problema de classificação de dígitos manuscritos. Neste exemplo, x é uma lista dos valores de intensidade de pixels. Portanto, x é igual a uma matriz numérica dessa lista de valores de intensidade de pixels. Em seguida, para inicializar e realizar uma etapa de propagação direta, a camada 1 é uma camada densa com 25 unidades e a função de ativação sigmóide. Em seguida, você calcula a1 igual à função da Camada 1 aplicada a x. Para criar e realizar a inferência por meio da segunda camada, da mesma forma, você configura a Camada 2 da seguinte forma e, em seguida, calcula a2 como a Camada 2 aplicada a a1. Então, finalmente, a camada 3 é a terceira e última camada densa. Finalmente, você pode opcionalmente limitar a3 para chegar a uma previsão binária para y-hat. Essa é a sintaxe para realizar inferências no TensorFlow. Uma coisa à qual aludi brevemente é a estrutura das matrizes numéricas. O TensorFlow trata os dados de uma determinada maneira, que é importante corrigir. No próximo vídeo, vamos dar uma olhada em como o TensorFlow lida com os dados.
(Obrigatória)
pt-BR
​

