O algoritmo de regressão softmax é uma generalização da regressão logística, que é um algoritmo de classificação binária para os contextos de classificação multiclasse. Vamos dar uma olhada em como funciona.
Reproduza o vídeo começando em ::23 e siga a transcrição0:23
Lembre-se de que a regressão logística se aplica quando y pode assumir dois valores de saída possíveis, zero ou um, e a forma como ela calcula essa saída é que primeiro você calcula z igual a w.produto de x mais b, e então calcula o que vou chamar aqui de igual a g de z, que é uma função sigmóide aplicada a z. Interpretamos isso como estimativas de regressões logísticas da probabilidade de y ser igual a para 1 dadas essas características de entrada x. Agora, uma pergunta rápida do questionário; se a probabilidade de y for igual a 1 é 0,71, então qual é a probabilidade de que y seja igual a zero? Bem, a chance de y ser o único, e as chances de y ser o zero, elas devem somar uma, certo? Portanto, há 71 por cento de chance de ser um, tem que haver 29 por cento ou 0,29 de chance de ser igual a zero.
Reproduza o vídeo começando em :1:28 e siga a transcrição1:28
Para embelezar um pouco a regressão logística a fim de nos preparar para a generalização para a regressão softmax, vou pensar na regressão logística como, na verdade, computando dois números: primeiro a_1, que é essa quantidade que tínhamos anteriormente da chance de y ser igual a 1 dado x, e segundo, vou pensar na regressão logística como também computando a_2, que é 1 menos isso, que é apenas o chance de y ser igual a zero, dadas as características de entrada x, então a_1 e a_2, é claro, precisam somar 1. Vamos agora generalizar isso para regressão softmax, e vou fazer isso com um exemplo concreto de quando y pode assumir quatro saídas possíveis, então y pode assumir os valores 1, 2, 3 ou 4.
Reproduza o vídeo começando em :2:25 e siga a transcrição2:25
Aqui está o que a regressão softmax fará: ela computará z_1 como w_1.product com x mais b_1, e então z_2 é igual a w_2.product de x mais b_2, e assim por diante para z_3 e z_4.
Reproduza o vídeo começando em :2:41 e siga a transcrição2:41
Aqui, w_1, w_2, w_3, w_4, bem como b_1, b_2, b_3, b_4, esses são os parâmetros da regressão softmax.
Reproduza o vídeo começando em :3:9 e siga a transcrição3:09
A seguir, aqui está a fórmula para a regressão softmax, calcularemos a_1 igual a e^z_1 dividido por e^ z_1, mais e^ z_2, mais e^z_3 mais, e^ z_4 e a_1 será interpretado como a estimativa do algoritmo da chance de y ser igual a 1 dadas as características de entrada x. Em seguida, calcularemos a_2 é igual a e^ z_2 dividido pelo mesmo denominador, e^z_1 mais e^z_2, mais e^z_3, mais e^z4, e interpretaremos a_2 como a estimativa do algoritmo da chance de y ser igual a 2, dadas as características de entrada x.
Reproduza o vídeo começando em :3:40 e siga a transcrição3:40
Da mesma forma para a_3, onde aqui o numerador agora é e^z_3 dividido pelo mesmo denominador, essa é a chance estimada de y ser a_3 e, da mesma forma, a_4 assume essa expressão. Enquanto à esquerda, anotamos a especificação para o modelo de regressão logística, essas equações à direita são nossa especificação para o modelo de regressão softmax.
Reproduza o vídeo começando em :4:9 e siga a transcrição4:09
Tem parâmetros w_1 a w_4 e b_1 a b_4, e se você puder aprender escolhas apropriadas para todos esses parâmetros, isso lhe dará uma maneira de prever qual é a chance de y ser 1, 2, 3 ou 4, dado um conjunto de recursos de entrada x. Teste rápido, vamos ver, execute a regressão softmax em uma nova entrada x e você descobre que a_1 é 0,30, a_2 é 0,20, a_3 é 0,15. O que você acha que a_4 será? Por que você não dá uma olhada neste questionário e vê se consegue descobrir a resposta certa? Você deve ter percebido que, como a chance de y assumir os valores de 1, 2, 3 ou 4, eles precisam somar um, a_4, a chance de y estar com quatro tem que ser 0,35, que é 1 menos 0,3 menos 0,2 menos 0,15. Aqui, anotei as fórmulas para a regressão softmax no caso de quatro saídas possíveis, e agora vamos anotar a fórmula para o caso geral da regressão softmax.
Reproduza o vídeo começando em :5:24 e siga a transcrição5:24
No caso geral, y pode assumir n valores possíveis, então y pode ser 1, 2, 3 e assim por diante até n. Nesse caso, a regressão softmax será computada para z_ j igual a w_ j.product com x mais b_j, onde agora os parâmetros da regressão softmax são w_1, w_2 até w_n, bem como b_1, b_2 até w_n,
Reproduza o vídeo começando em :5:53 e siga a transcrição5:53
bem como b_1, b_2 por _n. Então, finalmente, calcularemos um j igual a e para z j dividido pela soma de k igual a 1 a n de e até z sub k. Enquanto aqui eu estou usando outra variável k para indexar a soma, porque aqui j se refere a um número fixo específico como j é igual a 1. A, j é interpretado como a estimativa do modelo de que y é igual a j dadas as características de entrada x. Observe que, construindo essa fórmula, se você somar a1, a2 até n, esses números sempre acabarão somando 1. Especificamos como você calcularia o modelo de regressão softmax.
Reproduza o vídeo começando em :6:37 e siga a transcrição6:37
Não vou provar isso neste vídeo, mas acontece que se você aplicar a regressão softmax com n igual a 2, então há apenas duas classes de saída possíveis, a regressão softmax acaba computando basicamente a mesma coisa que a regressão logística. Os parâmetros acabam sendo um pouco diferentes, mas acabam se reduzindo ao modelo de regressão logística. Mas é por isso que o modelo de regressão softmax é a generalização da regressão logística. Depois de definir como a regressão softmax calcula suas saídas, vamos agora dar uma olhada em como especificar a função de custo para a regressão softmax. Lembre-se da regressão logística, isso é o que tínhamos. Dissemos que z é igual a isso. Então eu escrevi anteriormente que a1 é g de z, foi interpretado como uma probabilidade de y ser 1. Também escrevemos que a2 é a probabilidade de y ser igual a 0. Anteriormente, escrevemos a perda da regressão logística como negativa y log a1 menos 1 menos y log 1 menos a1. Mas 1 menos a1 também é igual a a2, porque a2 é um menos a1 de acordo com essa expressão aqui. Posso reescrever ou simplificar um pouco a perda da regressão logística para ser negativa y log a1 menos 1 menos y log de a2. Em outras palavras, a perda se y for igual a 1 é menos log a1. Se y for igual a 0, a perda será negativa log a2 e, em seguida, a mesma de antes, a função de custo para todos os parâmetros do modelo é a perda média, média de todo o conjunto de treinamento. Essa foi uma função de custo para essa regressão. Vamos anotar a função de custo que é convencionalmente usada na regressão softmax. Lembre-se de que essas são as equações que usamos para a regressão softmax. A perda que vamos usar para a regressão softmax é exatamente isso. A perda de se o algoritmo colocar a1 em um. O rótulo de verdade fundamental é porque se y é igual a 1, a perda é negativa log a1. Diz log negativo da probabilidade de pensar que y era igual a 1, ou se y é igual a 2, então vou definir como log negativo a2. Y é igual a 2. A perda do algoritmo neste exemplo é um log negativo da probabilidade de se pensar que y era igual a 2. Até se y é igual a n, então a perda é logaritmo negativo de um n. Para ilustrar o que isso está fazendo, se y é igual a j, então a perda é logaritmo negativo de um j. Essa é a aparência dessa função. O logaritmo negativo de um j é uma curva que se parece com isso. Se um j estiver muito próximo de 1 , você ultrapassará essa parte da curva e a perda será muito pequena. Mas se pensasse, digamos, que um j tinha apenas 50% de chance , a perda ficaria um pouco maior. Quanto menor for a j, maior será a perda. Isso incentiva o algoritmo a tornar um j o maior possível, o mais próximo possível de 1. Porque qualquer que seja o valor real de y, você quer que o algoritmo diga, espero que a chance de y ser esse valor seja muito grande. Observe que, nessa função de perda, y em cada exemplo de treinamento pode assumir apenas um valor. Você acaba computando esse log negativo de um j apenas para um valor de a j, que é qualquer que seja o valor real de y igual a j nesse exemplo de treinamento específico. Por exemplo, se y for igual a 2, você acaba computando o log negativo de a2, mas não qualquer outro log negativo de a1 ou os outros termos aqui. Essa é a forma do modelo, bem como a função de custo para a regressão softmax. Se você for treinar esse modelo, poderá começar a criar algoritmos de classificação multiclasse. O que gostaríamos de fazer a seguir é pegar esse modelo de regressão softmax e encaixá-lo em uma nova rede para que você realmente faça algo ainda melhor, que é treinar uma nova rede para classificação multiclasse. Vamos ver isso no próximo vídeo.
